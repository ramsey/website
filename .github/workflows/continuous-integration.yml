# GitHub Actions Documentation: https://docs.github.com/en/actions

name: "build"

on:
  push:
    branches:
      - "main"
    tags:
      - "*"
  pull_request:
    branches:
      - "main"

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  COMPOSER_ROOT_VERSION: "1.99.99"

jobs:
  coding-standards:
    name: "Coding standards"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3.0.2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.21.2"
        with:
          php-version: "latest"
          coverage: "none"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@2.1.0"

      - name: "Check syntax (php-parallel-lint)"
        shell: "bash"
        run: "composer dev:lint:syntax"

      - name: "Check coding standards (PHP_CodeSniffer)"
        shell: "bash"
        run: "composer dev:lint:style"

  static-analysis:
    name: "Static analysis"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3.0.2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.21.2"
        with:
          php-version: "latest"
          coverage: "none"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@2.1.0"

      - name: "Statically analyze code (PHPStan)"
        shell: "bash"
        run: "composer dev:analyze:phpstan"

      - name: "Statically analyze code (Psalm)"
        shell: "bash"
        run: "composer dev:analyze:psalm -- --shepherd"

  security-analysis:
    name: "Security analysis"
    needs: ["coding-standards", "static-analysis"]
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3.0.2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.21.2"
        with:
          php-version: "latest"
          coverage: "none"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@2.1.0"

      - name: "Analyze security of code (Psalm)"
        shell: "bash"
        run: "./vendor/bin/psalm --taint-analysis --report=var/log/psalm.sarif"

      - name: "Upload security analysis results to GitHub"
        uses: "github/codeql-action/upload-sarif@v2"
        with:
          sarif_file: "var/log/psalm.sarif"

  code-coverage:
    name: "Unit tests and coverage"
    needs: ["coding-standards", "static-analysis"]
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3.0.2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.21.2"
        with:
          php-version: "latest"
          coverage: "pcov"
          ini-values: "memory_limit=-1"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@2.1.0"

      - name: "Install dependencies (Yarn)"
        uses: "bahmutov/npm-install@v1.8.23"

      - name: "Build assets"
        run: "yarn encore production"

      - name: "Run unit tests (PHPUnit)"
        shell: "bash"
        run: "composer dev:test:coverage:ci"

      - name: "Publish coverage report to Codecov"
        uses: "codecov/codecov-action@v3.1.1"
