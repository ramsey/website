<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Ben Ramsey</title>
    <subtitle type="text">Web Developer, Author, &amp; Speaker</subtitle>
    <link rel="self" type="application/atom+xml" href="https://benramsey.com/feeds/blog.xml"/>
    <link rel="alternate" type="text/html" href="https://benramsey.com"/>
    <link rel="license" type="text/html" href="http://creativecommons.org/licenses/by-sa/4.0/"/>
    <link rel="license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf"/>
    <icon>https://www.gravatar.com/avatar/0c217b9a7dd0aa31ed40bd0f453727e1.png</icon>
    <updated>2018-07-19T23:04:18+00:00</updated>
    <id>http://benramsey.com/</id>
    <author>
        <name>Ben Ramsey</name>
        <uri>https://benramsey.com/</uri>
        <email>ben@benramsey.com</email>
    </author>
    <rights type="text">
        Copyright © 2004–2018 Ben Ramsey. Except where otherwise noted, this
        feed is licensed under a Creative Commons Attribution-ShareAlike 4.0
        International license. It contains material originally published by Ben
        Ramsey at http://benramsey.com under the Creative Commons
        Attribution-ShareAlike 4.0 International license.
    </rights>
    <generator uri="http://jekyllrb.com/" version="2.5.3">Jekyll</generator>

        <entry>
            <title type="text">Announcing PHP TestFest 2017</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2017/07/phptestfest/"/>
            <published>2017-07-13T18:00:00+00:00</published>

            <id>http://benramsey.com/blog/2017/07/phptestfest</id>
            <rights type="text">
                Copyright © 2017 Ben Ramsey.
            </rights>

            <summary type="text">For those who’ve been around the PHP community for a while, you’ll recall the successful PHP TestFest events that began after a discussion at PHP Quebec in 2008. Many user groups and mentors signed on to host and help with events, and a lot of folks became first-time contributors to the PHP proje...</summary>
            <content type="html">
                &lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;https://files.benramsey.com/ws/blog/2017-07-13-phptestfest/banner-1500x630.jpg&quot;&gt;&lt;/p&gt;
                &lt;p&gt;For those who’ve been around the PHP community for a while, you’ll recall the successful PHP TestFest events that began after a &lt;a href=&quot;http://news.php.net/php.qa/64083&quot;&gt;discussion at PHP Quebec in 2008&lt;/a&gt;. Many user groups and mentors signed on to host and help with events, and a lot of folks became first-time contributors to the PHP project, helping improve our code coverage. It ran strong in a &lt;em&gt;global&lt;/em&gt; sense from 2008 to 2010. After that, various groups (particularly the Brazilian groups) have continued the tradition.&lt;/p&gt;

&lt;p&gt;A few months ago, at php[tek] in Atlanta, I mentioned to &lt;a href=&quot;http://www.dragonbe.com/&quot;&gt;Michelangelo&lt;/a&gt; that I’d love to bring back PHP TestFest. &lt;a href=&quot;https://www.sammyk.me/&quot;&gt;Sammy&lt;/a&gt; had given &lt;a href=&quot;https://speakerdeck.com/sammyk/writing-tests-for-php-source-php-tek-2017&quot;&gt;an excellent talk on writing PHPT tests&lt;/a&gt;, and &lt;a href=&quot;https://twitter.com/ellotheth/status/868583446498734084&quot;&gt;Gemma tweeted&lt;/a&gt; a link to the &lt;a href=&quot;https://wiki.php.net/qa/testfest&quot;&gt;old PHP TestFest wiki page&lt;/a&gt;. From there, things snowballed.&lt;/p&gt;

&lt;h3 id=&quot;were-bringing-back-php-testfest&quot;&gt;We’re bringing back PHP TestFest!&lt;/h3&gt;

&lt;p&gt;The PHP TestFest will run for 4 months this year: September through December. This should give groups plenty of time to plan and prepare one or more local events. In early January, we will award prizes; if your organization/company is interested in offering products or services as prizes, let us know (send email to &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#115;&amp;#112;&amp;#111;&amp;#110;&amp;#115;&amp;#111;&amp;#114;&amp;#115;&amp;#064;&amp;#112;&amp;#104;&amp;#112;&amp;#116;&amp;#101;&amp;#115;&amp;#116;&amp;#102;&amp;#101;&amp;#115;&amp;#116;&amp;#046;&amp;#111;&amp;#114;&amp;#103;&quot;&gt;&amp;#115;&amp;#112;&amp;#111;&amp;#110;&amp;#115;&amp;#111;&amp;#114;&amp;#115;&amp;#064;&amp;#112;&amp;#104;&amp;#112;&amp;#116;&amp;#101;&amp;#115;&amp;#116;&amp;#102;&amp;#101;&amp;#115;&amp;#116;&amp;#046;&amp;#111;&amp;#114;&amp;#103;&lt;/a&gt;).&lt;/p&gt;

&lt;p class=&quot;image right clean&quot;&gt;&lt;img src=&quot;https://files.benramsey.com/ws/blog/2017-07-13-phptestfest/wooble-wave.svg&quot; width=&quot;100%&quot; alt=&quot;Wooble&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This time around, I’ve set up a dedicated website at &lt;a href=&quot;https://phptestfest.org/&quot;&gt;PHPTestFest.org&lt;/a&gt; and &lt;a href=&quot;https://groups.google.com/a/phpcommunity.org/group/testfest/&quot;&gt;Google Group&lt;/a&gt; for discussion. We also have the &lt;a href=&quot;https://kiwiirc.com/client/irc.freenode.net#phptestfest&quot;&gt;#phptestfest channel&lt;/a&gt; on Freenode IRC. All are encouraged to contribute to the &lt;a href=&quot;https://github.com/phpcommunity/phptestfest.org&quot;&gt;website and tools repository&lt;/a&gt;. We need technical tutorials, as well as tutorials from veteran TestFest organizers on how to lead successful PHP TestFest events. Additionally, I’ve provided a stub for a console application in the repository, and I’d love to see that evolve into a robust tool for helping people write and contribute PHPT tests.&lt;/p&gt;

&lt;p&gt;I’ll be updating the “&lt;a href=&quot;https://phptestfest.org/start/&quot;&gt;Getting Started&lt;/a&gt;” page on the PHP TestFest website soon with this information and more, so keep posted.&lt;/p&gt;

&lt;p&gt;Let’s get to work on improving code coverage of the PHP language!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;Special thanks to Sammy for letting us use “Wooble” as a testing mascot.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This announcement was cross-posted to the &lt;a href=&quot;http://news.php.net/php.qa/67968&quot;&gt;php-qa&lt;/a&gt;, &lt;a href=&quot;http://news.php.net/ug.admins/1222&quot;&gt;ug-admins&lt;/a&gt;, and &lt;a href=&quot;https://groups.google.com/a/phpcommunity.org/d/msg/testfest/FqGWMoKSiuc/EjE06bIBBwAJ&quot;&gt;phptestfest&lt;/a&gt; mailing lists.&lt;/em&gt;&lt;/p&gt;


                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;Announcing PHP TestFest 2017&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2017/07/phptestfest/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2017 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

                <category term="phptestfest" scheme="https://benramsey.com/ns/category"/>

                <category term="phpt" scheme="https://benramsey.com/ns/category"/>

                <category term="testing" scheme="https://benramsey.com/ns/category"/>

        </entry>

        <entry>
            <title type="text">Building PHP Projects on AWS CodeBuild</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2016/12/aws-codebuild-php/"/>
            <published>2016-12-02T23:00:00+00:00</published>

            <id>http://benramsey.com/blog/2016/12/aws-codebuild-php</id>
            <rights type="text">
                Copyright © 2016 Ben Ramsey.
            </rights>

            <summary type="text">At AWS re:Invent, Amazon announced a new service for building and testing code: AWS CodeBuild. They provide managed environments for Android, Java, Python, Ruby, Golang, and Node.js. While PHP is missing, it is possible to build PHP projects using the service. Follow along to find out how.</summary>
            <content type="html">
                &lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;https://files.benramsey.com/ws/blog/2016-12-02-aws-codebuild-php/banner-1500x630.jpg&quot;&gt;&lt;/p&gt;
                &lt;p&gt;I’ve had a great time at &lt;a href=&quot;https://reinvent.awsevents.com/&quot;&gt;AWS re:Invent&lt;/a&gt; this week, attending sessions and hanging out with some of the &lt;a href=&quot;https://www.shootproof.com/&quot;&gt;ShootProof&lt;/a&gt; team. My favorite part of the week was the “mini con” on containers. I spent Thursday immersed in sessions dedicated to deploying Docker containers on AWS.&lt;/p&gt;

&lt;p&gt;Of course, the main hightlight of re:Invent is always the keynotes and the new services and features announcements they make during the keynotes. One of the new services caught my attention, and I decided to give it a try. That service is &lt;a href=&quot;https://aws.amazon.com/codebuild/&quot;&gt;AWS CodeBuild&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;CodeBuild is designed to be used as part of the &lt;a href=&quot;https://aws.amazon.com/codepipeline/&quot;&gt;AWS CodePipeline&lt;/a&gt;, but it may also be used by itself. Additionally, with AWS’s increased focus on their container service (&lt;a href=&quot;https://aws.amazon.com/ecs/&quot;&gt;ECS&lt;/a&gt;), it’s designed to integrate with ECS to use images you’ve stored in AWS, but it may also use images available on &lt;a href=&quot;https://hub.docker.com/&quot;&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Out of the box, CodeBuild provides some managed images that you may use to build your projects. These include environments for Android, Java, Python, Ruby, Golang, and Node.js. PHP is missing from this list, but since you’re able to use other images, I decided to see how easy it is to get up and running on CodeBuild with a PHP project. I chose to try out my &lt;a href=&quot;https://github.com/ramsey/uuid&quot;&gt;ramsey/uuid library&lt;/a&gt; for a simple test. Feel free to follow along with me.&lt;/p&gt;

&lt;h3 id=&quot;getting-started&quot;&gt;Getting Started&lt;/h3&gt;

&lt;p&gt;From your Amazon console, search for “CodeBuild” from the AWS Services search box, and choose it from the drop down menu that appears.&lt;/p&gt;

&lt;figure&gt;
  &lt;figcaption&gt;Figure 1. Search for &amp;ldquo;CodeBuild&amp;rdquo; from the AWS console&lt;/figcaption&gt;
  &lt;p&gt;&lt;img class=&quot;image center shadow&quot; src=&quot;https://files.benramsey.com/ws/blog/2016-12-02-aws-codebuild-php/console-codebuild-search.png&quot; width=&quot;75%&quot; alt=&quot;Search for CodeBuild from the AWS console&quot; /&gt;&lt;/p&gt;
&lt;/figure&gt;

&lt;p&gt;If you’ve not yet begun playing with CodeBuild, you’ll see a page like the one in Figure 2. Click the “Get Started” button to begin.&lt;/p&gt;

&lt;figure&gt;
  &lt;figcaption&gt;Figure 2. Getting started with CodeBuild&lt;/figcaption&gt;
  &lt;p&gt;&lt;img class=&quot;image center shadow&quot; src=&quot;https://files.benramsey.com/ws/blog/2016-12-02-aws-codebuild-php/codebuild-getting-started-2.png&quot; width=&quot;75%&quot; alt=&quot;Getting started with AWS CodeBuild&quot; /&gt;&lt;/p&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;configuring-your-project&quot;&gt;Configuring Your Project&lt;/h3&gt;

&lt;p&gt;Figure 3 shows most of the options available when configuring a project, pre-filled for the ramsey/uuid library. I’ll step through each option to explain what’s going on.&lt;/p&gt;

&lt;p&gt;First, provide a project name. Here, I’ve named the project “ramsey-uuid.”&lt;/p&gt;

&lt;p&gt;For &lt;em&gt;Source provider&lt;/em&gt;, choose GitHub and then click the link provided to connect to GitHub. This will take you through the OAuth dance to grant AWS with access to your GitHub account. Afterwards, the &lt;em&gt;Repository&lt;/em&gt; drop-down will be populated with a list of your GitHub repositories. Here, I’ve selected the uuid repository.&lt;/p&gt;

&lt;p&gt;Next, you need to tell CodeBuild how to build your project by specifying an image to use. To use an image in Docker Hub, select “Specify a Docker image” for &lt;em&gt;Environment image&lt;/em&gt; and choose “Other” for &lt;em&gt;Custom image type&lt;/em&gt;. For the &lt;em&gt;Custom image ID&lt;/em&gt;, I’m using &lt;code&gt;benramsey/composer-uuid:latest&lt;/code&gt; to specify the repository, image name, and image tag. You may place a &lt;a href=&quot;http://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html&quot;&gt;&lt;em&gt;buildspec.yml&lt;/em&gt; file&lt;/a&gt; in the root of your repository to specify build commands (similar to a &lt;a href=&quot;https://docs.travis-ci.com/user/customizing-the-build&quot;&gt;&lt;em&gt;.travis.yml&lt;/em&gt; file&lt;/a&gt;). Since ramsey/uuid doesn’t have a &lt;em&gt;buildspec.yml&lt;/em&gt; file, I’m specifying the &lt;em&gt;Build commands&lt;/em&gt; directly.&lt;/p&gt;

&lt;aside class=&quot;warning&quot;&gt;&lt;blockquote&gt;&lt;em&gt;
&lt;p&gt;While there is an &lt;a href=&quot;https://hub.docker.com/_/composer/&quot;&gt;official Composer image on Docker Hub&lt;/a&gt;, it is currently based on the &lt;code&gt;php:7-alpine&lt;/code&gt; image (see the &lt;a href=&quot;https://github.com/composer/docker/blob/be6ecf58913f704399d11a352818b22951832a60/1.2/Dockerfile&quot;&gt;Dockerfile&lt;/a&gt; for reference). The PHP image using &lt;a href=&quot;https://alpinelinux.org/&quot;&gt;Alpine Linux&lt;/a&gt; will not run on AWS CodeBuild. Until this is resolved, I recommend using &lt;a href=&quot;http://robloach.net/&quot;&gt;Rob Loach’s&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/composer/composer/&quot;&gt;composer/composer image&lt;/a&gt;, which is what I have used as the basis for my &lt;a href=&quot;https://hub.docker.com/r/benramsey/composer-uuid/&quot;&gt;benramsey/composer-uuid&lt;/a&gt; image.&lt;/p&gt;
&lt;/em&gt;&lt;/blockquote&gt;&lt;/aside&gt;

&lt;p&gt;The full build command I’ve specified for ramsey/uuid is:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;composer install --no-interaction --prefer-dist &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./vendor/bin/parallel-lint src tests &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./vendor/bin/phpunit --verbose --no-coverage &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./vendor/bin/phpcs src tests --standard&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;psr2 -sp&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Finally, I’m not generating any artifacts for this build, so I selected “No artifacts” for the &lt;em&gt;Artifacts type&lt;/em&gt;, and I chose to let it automatically create a service role in my account.&lt;/p&gt;

&lt;p&gt;Our project is now configured, so click &lt;em&gt;Continue&lt;/em&gt;, review your choices, click &lt;em&gt;Save and Build&lt;/em&gt;, then click &lt;em&gt;Start build&lt;/em&gt; to run a build.&lt;/p&gt;

&lt;figure&gt;
  &lt;figcaption&gt;Figure 3. Configure a project (click to enlarge)&lt;/figcaption&gt;
  &lt;p&gt;&lt;a href=&quot;https://files.benramsey.com/ws/blog/2016-12-02-aws-codebuild-php/codebuild-configure.png&quot;&gt;&lt;img class=&quot;image center shadow&quot; src=&quot;https://files.benramsey.com/ws/blog/2016-12-02-aws-codebuild-php/codebuild-configure.png&quot; width=&quot;75%&quot; alt=&quot;Configure a CodeBuild project&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;building-your-project&quot;&gt;Building Your Project&lt;/h3&gt;

&lt;p&gt;As your project is building, you’re able to view the progress of each stage of the build, complete with the last 20 lines of the log output, or you may view the complete log in CloudWatch to see any errors or problems that were emitted during the build. If the build passes, you’ll see the word &lt;em&gt;Succeeded&lt;/em&gt; in a comforting bold green.&lt;/p&gt;

&lt;figure&gt;
  &lt;figcaption&gt;Figure 4. Project build progress (click to enlarge)&lt;/figcaption&gt;
  &lt;p&gt;&lt;a href=&quot;https://files.benramsey.com/ws/blog/2016-12-02-aws-codebuild-php/codebuild-progress.png&quot;&gt;&lt;img class=&quot;image center shadow&quot; src=&quot;https://files.benramsey.com/ws/blog/2016-12-02-aws-codebuild-php/codebuild-progress.png&quot; width=&quot;75%&quot; alt=&quot;View the progress of your project build&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;what-next&quot;&gt;What Next?&lt;/h3&gt;

&lt;p&gt;My team is looking into CodeBuild as an alternative to running a dedicated Jenkins instance, and as we evaluate it, there are a few things we’re considering:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Some of our tests talk to a dev database in a VPC. How do we grant VPC access to a container running in CodeBuild?&lt;/li&gt;
  &lt;li&gt;In Jenkins, we capture a handful of artifacts, including code coverage reports and generated docblock documentation. With CodeBuild, we might consider copying these artifacts into an S3 bucket configured for website hosting.&lt;/li&gt;
  &lt;li&gt;What do we do about the other information we currently capture, like JUnit and Clover XML files?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Feel free to use ramsey/uuid and my directions here to play with CodeBuild, or use your own project. In the comments, let me know what you think and whether you’ve run into any caveats with your builds. If you come up with any solutions for the things we’re considering, I’d love to hear them.&lt;/p&gt;

                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;Building PHP Projects on AWS CodeBuild&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2016/12/aws-codebuild-php/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2016 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

                <category term="aws" scheme="https://benramsey.com/ns/category"/>

                <category term="reinvent" scheme="https://benramsey.com/ns/category"/>

                <category term="codebuild" scheme="https://benramsey.com/ns/category"/>

        </entry>

        <entry>
            <title type="text">7 Tips for php[tek]</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2016/05/phptek-tips/"/>
            <published>2016-05-22T00:00:00+00:00</published>

            <id>http://benramsey.com/blog/2016/05/phptek-tips</id>
            <rights type="text">
                Copyright © 2016 Ben Ramsey.
            </rights>

            <summary type="text">This week, I’m attending php[tek]. This is my seventh php[tek], and the first I’ve attended not as a speaker. It’s one of my favorite conferences, and I didn’t want to miss its first year in a new city: St. Louis. As we gear up for the eleventh php[tek] conference, I thought I’d list my seven tip...</summary>
            <content type="html">
                &lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;https://files.benramsey.com/ws/blog/2016-05-22-phptek-tips/banner-1500x630.jpg&quot;&gt;&lt;/p&gt;
                &lt;p&gt;This week, I’m attending &lt;a href=&quot;https://tek.phparch.com/&quot;&gt;php[tek]&lt;/a&gt;. This is my seventh php[tek], and the first I’ve attended not as a speaker. It’s one of my favorite conferences, and I didn’t want to miss its first year in a new city: St. Louis. As we gear up for the eleventh php[tek] conference, I thought I’d list my seven tips for getting the most out of your php[tek] experience.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Hang out in the evenings, after the conference sessions.&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;php[tek] is known for hosting events in the evening, from video games and board games to hackathons. Make sure you you stick around and take part. One of the best features of PHP is its community, and taking part in the events following the day’s conference sessions is a great way to build relationships in this community.&lt;/p&gt;

    &lt;div class=&quot;box alt&quot;&gt;
     &lt;div class=&quot;row 50% uniform&quot;&gt;
         &lt;div class=&quot;8u&quot;&gt;
         &lt;span class=&quot;image fit clean&quot;&gt;
             &lt;a href=&quot;https://www.flickr.com/photos/akrabat/8784385503/&quot;&gt;&lt;img src=&quot;https://files.benramsey.com/ws/blog/2016-05-22-phptek-tips/phptek03.jpg&quot; /&gt;&lt;/a&gt;
         &lt;/span&gt;
         &lt;/div&gt;
         &lt;div class=&quot;4u&quot;&gt;
         &lt;span class=&quot;image fit clean&quot;&gt;
             &lt;a href=&quot;https://www.flickr.com/photos/akrabat/4642947292/&quot;&gt;&lt;img src=&quot;https://files.benramsey.com/ws/blog/2016-05-22-phptek-tips/phptek05.jpg&quot; /&gt;&lt;/a&gt;
         &lt;/span&gt;
         &lt;/div&gt;
     &lt;/div&gt;
 &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;After the conference events, follow folks to the bar.&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;Do you have to be a drinker? Nope. There’s much more to a bar than drinking. In Chicago (Rosemont), php[tek] had Shoeless Joe’s, a nearby sports bar, where attendees would congregate each evening following the conference activities. In St. Louis, I don’t know what that place will be, but I’m certain there will be one. This is where relationship-building continues. There’s so much that can come from these relationships—friendships, business opportunities, mentors, and more!&lt;/p&gt;

    &lt;div class=&quot;embed rich Twitter&quot;&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;I closed down Shoeless Joe’s with &lt;a href=&quot;https://twitter.com/cspruck?ref_src=twsrc%5Etfw&quot;&gt;@cspruck&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/ElizabethN?ref_src=twsrc%5Etfw&quot;&gt;@ElizabethN&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/derickr?ref_src=twsrc%5Etfw&quot;&gt;@derickr&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/coderabbi?ref_src=twsrc%5Etfw&quot;&gt;@coderabbi&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/JimLindForPope?ref_src=twsrc%5Etfw&quot;&gt;@JimLindForPope&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/dshafik?ref_src=twsrc%5Etfw&quot;&gt;@dshafik&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/ptahdunbar?ref_src=twsrc%5Etfw&quot;&gt;@ptahdunbar&lt;/a&gt;, et al. &lt;a href=&quot;https://twitter.com/hashtag/phptek?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#phptek&lt;/a&gt;&lt;/p&gt;&amp;mdash; Ben Ramsey (@ramsey) &lt;a href=&quot;https://twitter.com/ramsey/status/469767931820511232?ref_src=twsrc%5Etfw&quot;&gt;May 23, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Take advantage of the “hallway track,” and don’t forget the regular sessions.&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;There is a high level of value gained by conversing with other conference attendees in the hallways between (and during) sessions at conferences. This “hallway track” has been touted as one of the most important reasons for attending a conference. The hallway allows you to build relationships and gain better understanding and insight into the technologies and tools you use on a daily basis. It’s an invaluable offering of any conference, but don’t forget about the value gained by attending the sessions. A healthy balance of both will help you have an awesome conference experience.&lt;/p&gt;

    &lt;div class=&quot;box alt&quot;&gt;
     &lt;div class=&quot;row 50% uniform&quot;&gt;
         &lt;div class=&quot;4u&quot;&gt;
             &lt;span class=&quot;image fit clean&quot;&gt;
                 &lt;a href=&quot;https://www.flickr.com/photos/eliw/19299729782/&quot;&gt;&lt;img src=&quot;https://files.benramsey.com/ws/blog/2016-05-22-phptek-tips/phptek09.jpg&quot; /&gt;&lt;/a&gt;
             &lt;/span&gt;
         &lt;/div&gt;
         &lt;div class=&quot;4u&quot;&gt;
             &lt;span class=&quot;image fit clean&quot;&gt;
                 &lt;a href=&quot;https://www.flickr.com/photos/blueparabola/5759017486/&quot;&gt;&lt;img src=&quot;https://files.benramsey.com/ws/blog/2016-05-22-phptek-tips/phptek14.jpg&quot; /&gt;&lt;/a&gt;
             &lt;/span&gt;
         &lt;/div&gt;
         &lt;div class=&quot;4u&quot;&gt;
             &lt;span class=&quot;image fit clean&quot;&gt;
                 &lt;a href=&quot;https://www.flickr.com/photos/benandliz/26982337936/&quot;&gt;&lt;img src=&quot;https://files.benramsey.com/ws/blog/2016-05-22-phptek-tips/phptek15.jpg&quot; /&gt;&lt;/a&gt;
             &lt;/span&gt;
         &lt;/div&gt;
     &lt;/div&gt;
 &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Attend the morning keynote sessions.&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;The morning keynote sessions set the tone for the conference, and &lt;a href=&quot;https://tek16.phparch.com/schedule/&quot;&gt;this year’s keynotes&lt;/a&gt; are no different. While it’s tempting to stay up into the wee hours of the morning—building relationships at the St. Louis version of Shoeless Joe’s—and sleep in to catch up on rest, you’ll miss some of the most important messages of the conference. The keynotes keep you thinking the rest of the day, and they provide conversation fuel for the hallway track and the after-hours community building. So, plan your rest accordingly and don’t miss the keynotes.&lt;/p&gt;

    &lt;div class=&quot;box alt&quot;&gt;
     &lt;div class=&quot;row 50% uniform&quot;&gt;
         &lt;div class=&quot;4u&quot;&gt;
             &lt;span class=&quot;image fit clean&quot;&gt;
                 &lt;a href=&quot;https://www.flickr.com/photos/rbowen/2523296126/&quot;&gt;&lt;img src=&quot;https://files.benramsey.com/ws/blog/2016-05-22-phptek-tips/phptek10.jpg&quot; /&gt;&lt;/a&gt;
             &lt;/span&gt;
         &lt;/div&gt;
         &lt;div class=&quot;2u&quot;&gt;
             &lt;span class=&quot;image fit clean&quot;&gt;
                 &lt;a href=&quot;https://www.flickr.com/photos/sebastian_bergmann/2527709508/&quot;&gt;&lt;img src=&quot;https://files.benramsey.com/ws/blog/2016-05-22-phptek-tips/phptek12.jpg&quot; /&gt;&lt;/a&gt;
             &lt;/span&gt;
         &lt;/div&gt;
         &lt;div class=&quot;2u&quot;&gt;
             &lt;span class=&quot;image fit clean&quot;&gt;
                 &lt;a href=&quot;https://www.flickr.com/photos/benandliz/27015991995/&quot;&gt;&lt;img src=&quot;https://files.benramsey.com/ws/blog/2016-05-22-phptek-tips/phptek13.jpg&quot; /&gt;&lt;/a&gt;
             &lt;/span&gt;
         &lt;/div&gt;
         &lt;div class=&quot;4u&quot;&gt;
             &lt;span class=&quot;image fit clean&quot;&gt;
                 &lt;a href=&quot;https://www.flickr.com/photos/preinheimer/2508587135/&quot;&gt;&lt;img src=&quot;https://files.benramsey.com/ws/blog/2016-05-22-phptek-tips/phptek11.jpg&quot; /&gt;&lt;/a&gt;
             &lt;/span&gt;
         &lt;/div&gt;
     &lt;/div&gt;
 &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Join the conference IRC backchannel: #phptek on Freenode.&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;The #phptek channel on Freenode IRC is the conference backchannel. If you’re unfamiliar with IRC or don’t have an IRC program, &lt;a href=&quot;http://webchat.freenode.net/?channels=#phptek&quot;&gt;use Freenode’s free webchat&lt;/a&gt; to join the #phptek channel. The conference backchannel is an essential tool for navigating the conference. Use it to chat with other attendees during sessions to find out what they’re learning and to share what you’re learning. Use it to discuss your dinner plans, and invite others along with you. You may also use it to keep in touch when the conference is over.&lt;/p&gt;

    &lt;div class=&quot;box alt&quot;&gt;
     &lt;div class=&quot;row 50% uniform&quot;&gt;
         &lt;div class=&quot;4u&quot;&gt;
             &lt;span class=&quot;image fit clean&quot;&gt;
                 &lt;a href=&quot;https://www.flickr.com/photos/89711680@N00/2511405443/&quot;&gt;&lt;img src=&quot;https://files.benramsey.com/ws/blog/2016-05-22-phptek-tips/phptek01.jpg&quot; /&gt;&lt;/a&gt;
             &lt;/span&gt;
         &lt;/div&gt;
         &lt;div class=&quot;4u&quot;&gt;
             &lt;span class=&quot;image fit clean&quot;&gt;
                 &lt;a href=&quot;https://www.flickr.com/photos/akrabat/4639332391/&quot;&gt;&lt;img src=&quot;https://files.benramsey.com/ws/blog/2016-05-22-phptek-tips/phptek04.jpg&quot; /&gt;&lt;/a&gt;
             &lt;/span&gt;
         &lt;/div&gt;
         &lt;div class=&quot;4u&quot;&gt;
             &lt;span class=&quot;image fit clean&quot;&gt;
                 &lt;a href=&quot;https://www.flickr.com/photos/89711680@N00/2511404709/&quot;&gt;&lt;img src=&quot;https://files.benramsey.com/ws/blog/2016-05-22-phptek-tips/phptek02.jpg&quot; /&gt;&lt;/a&gt;
             &lt;/span&gt;
         &lt;/div&gt;
     &lt;/div&gt;
 &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Use the official hashtag: #phptek&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;The conference’s official hashtag is #phptek. Not #tek. Not #tek16. It’s #phptek. Use it when posting on &lt;a href=&quot;https://twitter.com/search?f=tweets&amp;amp;q=%23phptek&quot;&gt;Twitter&lt;/a&gt;. Use it for posts to &lt;a href=&quot;https://www.instagram.com/explore/tags/phptek/&quot;&gt;Instagram&lt;/a&gt;. Search nearby check-ins on &lt;a href=&quot;https://www.swarmapp.com/&quot;&gt;Swarm&lt;/a&gt;. Use it on your photo uploads to &lt;a href=&quot;https://www.flickr.com/&quot;&gt;Flickr&lt;/a&gt;. Wherever you post about your php[tek] experience, use the hashtag #phptek. Using the hashtag helps connect you and your posts to the greater conversation about php[tek].&lt;/p&gt;

    &lt;div class=&quot;box alt&quot;&gt;
     &lt;div class=&quot;row 50% uniform&quot;&gt;
         &lt;div class=&quot;4u&quot;&gt;
             &lt;span class=&quot;image fit clean&quot;&gt;
                 &lt;a href=&quot;https://www.flickr.com/photos/derickrethans/3604018693/&quot;&gt;&lt;img src=&quot;https://files.benramsey.com/ws/blog/2016-05-22-phptek-tips/phptek08.jpg&quot; /&gt;&lt;/a&gt;
             &lt;/span&gt;
         &lt;/div&gt;
         &lt;div class=&quot;4u&quot;&gt;
             &lt;span class=&quot;image fit clean&quot;&gt;
                 &lt;a href=&quot;https://www.flickr.com/photos/derickrethans/3604849316/&quot;&gt;&lt;img src=&quot;https://files.benramsey.com/ws/blog/2016-05-22-phptek-tips/phptek06.jpg&quot; /&gt;&lt;/a&gt;
             &lt;/span&gt;
         &lt;/div&gt;
         &lt;div class=&quot;4u&quot;&gt;
             &lt;span class=&quot;image fit clean&quot;&gt;
                 &lt;a href=&quot;https://www.flickr.com/photos/akrabat/4639320697/&quot;&gt;&lt;img src=&quot;https://files.benramsey.com/ws/blog/2016-05-22-phptek-tips/phptek07.jpg&quot; /&gt;&lt;/a&gt;
             &lt;/span&gt;
         &lt;/div&gt;
     &lt;/div&gt;
 &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Take lots of pictures and upload them to Flickr.&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;If you don’t have a Flickr account, &lt;a href=&quot;https://www.flickr.com/&quot;&gt;go get one&lt;/a&gt;. Then, take lots of pictures at php[tek] and upload them to Flickr with the hashtag #phptek. I also recommend licensing your photos for use under a &lt;a href=&quot;https://creativecommons.org/&quot;&gt;Creative Commons&lt;/a&gt; license (Flickr can help you with this), but this is not a requirement—it’s just helpful to the community. Here are photos on Flickr from every year of php[tek]:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.flickr.com/search/?sort=date-taken-desc&amp;amp;view_all=1&amp;amp;tags=(phptek%20OR%20tek06)&amp;amp;min_taken_date=1145682000&amp;amp;max_taken_date=1146373199&quot;&gt;php|tek 2006&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.flickr.com/search/?sort=date-taken-desc&amp;amp;view_all=1&amp;amp;tags=(phptek%20OR%20tek07)&amp;amp;min_taken_date=1178946000&amp;amp;max_taken_date=1179723599&quot;&gt;php|tek 2007&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.flickr.com/search/?sort=date-taken-desc&amp;amp;view_all=1&amp;amp;tags=(phptek%20OR%20tek08)&amp;amp;min_taken_date=1211173200&amp;amp;max_taken_date=1211864399&quot;&gt;php|tek 2008&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.flickr.com/search/?sort=date-taken-desc&amp;amp;min_taken_date=1242363600&amp;amp;max_taken_date=1243227599&amp;amp;view_all=1&amp;amp;tags=(phptek%20OR%20tek09)&quot;&gt;php|tek 2009&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.flickr.com/search/?sort=date-taken-desc&amp;amp;min_taken_date=1273726800&amp;amp;max_taken_date=1274763599&amp;amp;view_all=1&amp;amp;tags=(phptek%20OR%20tek10%20OR%20tekx)&quot;&gt;php|tek 2010&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.flickr.com/search/?sort=date-taken-desc&amp;amp;view_all=1&amp;amp;tags=(phptek%20OR%20tek11)&amp;amp;min_taken_date=1305954000&amp;amp;max_taken_date=1306904399&quot;&gt;php|tek 2011&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.flickr.com/search/?sort=date-taken-desc&amp;amp;min_taken_date=1337576400&amp;amp;max_taken_date=1338181199&amp;amp;view_all=1&amp;amp;tags=(phptek%20OR%20tek12)&quot;&gt;php|tek 2012&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.flickr.com/search/?sort=date-taken-desc&amp;amp;view_all=1&amp;amp;tags=(phptek%20OR%20tek13)&amp;amp;min_taken_date=1368334800&amp;amp;max_taken_date=1371877199&quot;&gt;php[tek] 2013&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.flickr.com/search/?sort=date-taken-desc&amp;amp;view_all=1&amp;amp;tags=(phptek%20OR%20tek14)&amp;amp;min_taken_date=1400302800&amp;amp;max_taken_date=1400993999&quot;&gt;php[tek] 2014&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.flickr.com/search/?sort=date-taken-desc&amp;amp;view_all=1&amp;amp;tags=(phptek%20OR%20tek15)&amp;amp;min_taken_date=1431838800&amp;amp;max_taken_date=1432443599&quot;&gt;php[tek] 2015&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;There’s one more search for php[tek] 2016, but it has no photos (as of May 22). It’s up to you to add them!&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.flickr.com/search/?sort=date-taken-desc&amp;amp;min_taken_date=1463806800&amp;amp;max_taken_date=1464584399&amp;amp;view_all=1&amp;amp;tags=(phptek%20OR%20tek16)&quot;&gt;php[tek] 2016&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;php[tek] has been a cultural event in the PHP community over the last eleven years, inaugurating many community memes and launching many community projects. Over the years, we’ve started a &lt;a href=&quot;https://twitter.com/ramsey/status/818465884&quot;&gt;Terry Chay Fuck Counter&lt;/a&gt;; &lt;a href=&quot;https://twitter.com/ramsey/status/1840517481&quot;&gt;hosted PHP internals meetings&lt;/a&gt;; started the PHP standards group that morphed into the PHP-FIG; held sessions on &lt;a href=&quot;https://twitter.com/ramsey/status/1874399223&quot;&gt;community leadership&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/CaseySoftware/status/14435677111&quot;&gt;panels on running user groups&lt;/a&gt;; created numerous unseemly, alliterative names for our favorite local sports bar; drank lots of &lt;a href=&quot;https://twitter.com/ramsey/status/334540479406415872&quot;&gt;root beer&lt;/a&gt;; held summits on mentoring, mental health, and open source; experienced &lt;a href=&quot;https://twitter.com/ramsey/status/335056094340739074&quot;&gt;Ed Finkler’s first presentation&lt;/a&gt; on “Open Sourcing Mental Illness;” exposed the &lt;a href=&quot;https://twitter.com/ieatkillerbees/status/471469033829986305&quot;&gt;PHP Bard&lt;/a&gt;; and much, much more.&lt;/p&gt;

&lt;p&gt;The last nine years in Chicago have been amazing for php[tek]. I can’t wait to see what St. Louis will bring.&lt;/p&gt;

&lt;div class=&quot;embed rich Twitter&quot;&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;They’ve still not replaced the bat at Shoeless Joe’s. &lt;a href=&quot;https://twitter.com/hashtag/phptek?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#phptek&lt;/a&gt; &lt;a href=&quot;https://twitter.com/joshholmes?ref_src=twsrc%5Etfw&quot;&gt;@joshholmes&lt;/a&gt; &lt;a href=&quot;http://t.co/E4TNdXYGDs&quot;&gt;pic.twitter.com/E4TNdXYGDs&lt;/a&gt;&lt;/p&gt;&amp;mdash; Ben Ramsey (@ramsey) &lt;a href=&quot;https://twitter.com/ramsey/status/601266919212240896?ref_src=twsrc%5Etfw&quot;&gt;May 21, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;div class=&quot;embed rich Twitter&quot;&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;One last root beer beer. Cheers! &lt;a href=&quot;https://twitter.com/paleozombie?ref_src=twsrc%5Etfw&quot;&gt;@paleozombie&lt;/a&gt; &lt;a href=&quot;https://twitter.com/ramsey?ref_src=twsrc%5Etfw&quot;&gt;@ramsey&lt;/a&gt; &lt;a href=&quot;https://twitter.com/kevinbruce?ref_src=twsrc%5Etfw&quot;&gt;@kevinbruce&lt;/a&gt; &lt;a href=&quot;https://twitter.com/SandyS1?ref_src=twsrc%5Etfw&quot;&gt;@SandyS1&lt;/a&gt; &lt;a href=&quot;https://twitter.com/EliW?ref_src=twsrc%5Etfw&quot;&gt;@EliW&lt;/a&gt; @CattyCreations &lt;a href=&quot;https://twitter.com/omerida?ref_src=twsrc%5Etfw&quot;&gt;@omerida&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/phptek?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#phptek&lt;/a&gt; &lt;a href=&quot;http://t.co/2Vy7JD6gJt&quot;&gt;pic.twitter.com/2Vy7JD6gJt&lt;/a&gt;&lt;/p&gt;&amp;mdash; Beth Tucker Long (@e3BethT) &lt;a href=&quot;https://twitter.com/e3BethT/status/601928243768266752?ref_src=twsrc%5Etfw&quot;&gt;May 23, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;div class=&quot;embed rich Twitter&quot;&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;My biggest take away from &lt;a href=&quot;https://twitter.com/hashtag/phptek?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#phptek&lt;/a&gt; is that, as a community, we are starting to think about each other as people. That’s pretty cool&lt;/p&gt;&amp;mdash; Jeff Carouth (@jcarouth) &lt;a href=&quot;https://twitter.com/jcarouth/status/602286254483451904?ref_src=twsrc%5Etfw&quot;&gt;May 24, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;


                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;7 Tips for php[tek]&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2016/05/phptek-tips/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2016 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

                <category term="phptek" scheme="https://benramsey.com/ns/category"/>

        </entry>

        <entry>
            <title type="text">Mastering OAuth 2.0 Published</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2016/05/mastering-oauth2-published/"/>
            <published>2016-05-15T02:00:00+00:00</published>

            <id>http://benramsey.com/blog/2016/05/mastering-oauth2-published</id>
            <rights type="text">
                Copyright © 2016 Ben Ramsey.
            </rights>

            <summary type="text">I've published my first article in _php[architect]_ magazine since 2009! It's only fitting that it's an article on OAuth 2.0, since one of the last articles I published in their magazine was on OAuth 1.0. I'm proud and excited to finally publish a new article with them after such a long hiatus, a...</summary>
            <content type="html">

                &lt;p&gt;&lt;a href=&quot;https://www.phparch.com/magazine/2016-2/may/&quot;&gt;&lt;img class=&quot;image right no-fit clean&quot; src=&quot;https://files.benramsey.com/ws/blog/2016-05-14-mastering-oauth2/cover-232x300.png&quot; alt=&quot;php[architect] May 2016&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I’ve published my first article in &lt;a href=&quot;https://www.phparch.com/&quot;&gt;&lt;em&gt;php[architect]&lt;/em&gt; magazine&lt;/a&gt; since 2009! It’s only fitting that it’s an article on OAuth 2.0, since one of the last articles I published in their magazine was on OAuth 1.0. I’m proud and excited to finally publish a new article with them after such a long hiatus, and I hope my next article doesn’t take seven years to write.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;OAuth 2.0 is the de facto standard for authenticating users with third-party websites. If you want access to a user’s data in Google or Facebook, for example, OAuth 2.0 is what you use. But, let’s face it: OAuth 2.0 is not easy, and to make matters worse, it seems everyone has a slightly different implementation, making interoperability a nightmare. Fortunately, the PHP League of Extraordinary Packages has released version 1 of the league/oauth2-client library. Aiming for simplicity and ease-of-use, league/oauth2-client provides a common interface for accessing many OAuth 2.0 providers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It wasn’t easy for me to write this article. Call it writers’ block, procrastination, or what have you, I kept putting off writing the article over and over. I had more than a few false starts, and I tried a variety of different formats, convinced it was my workflow and process that was hindering me. In the end, I just had to write. I owe &lt;a href=&quot;https://twitter.com/omerida&quot;&gt;Oscar&lt;/a&gt; a few beers at &lt;a href=&quot;https://tek.phparch.com&quot;&gt;php[tek]&lt;/a&gt; for putting him through that.&lt;/p&gt;

&lt;h3 id=&quot;mistakes-were-made&quot;&gt;Mistakes Were Made&lt;/h3&gt;

&lt;p&gt;I began writing the article in August of last year. As a result of the long writing process, the Instagram client I registered for use in writing the article was registered before &lt;a href=&quot;http://developers.instagram.com/post/133424514006/instagram-platform-update&quot;&gt;Instagram deprecated the &lt;code&gt;/users/self/feed&lt;/code&gt; endpoint&lt;/a&gt; (thanks to an astute reader for pointing this out!). This means there are errors in the published version of the article, and I am truly sorry for this. As a technical author, it’s embarrassing—especially since it’s an error that could have been avoided.&lt;/p&gt;

&lt;aside class=&quot;info&quot;&gt;&lt;blockquote&gt;&lt;em&gt;
&lt;p&gt;There is a full, working &lt;a href=&quot;https://github.com/ramsey/oauth2-phparch/releases/tag/phparch-may2016&quot;&gt;package of code available for download&lt;/a&gt; on GitHub. It includes the full application for the code example used in the article, including updated code that uses the correct Instagram endpoint. Download the code and read the &lt;a href=&quot;https://github.com/ramsey/oauth2-phparch/blob/phparch-may2016/readme.md&quot;&gt;readme.md file&lt;/a&gt; to find out how to run it.&lt;/p&gt;
&lt;/em&gt;&lt;/blockquote&gt;&lt;/aside&gt;

&lt;p&gt;Fortunately, there’s an easy fix for this. In &lt;strong&gt;Listing 2&lt;/strong&gt; of my article’s example code (app/Http/Controllers/HomeController.php), you’ll find the following lines of code:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$feedRequest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Instagram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAuthenticatedRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;s1&quot;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;s1&quot;&gt;&amp;#39;https://api.instagram.com/v1/users/self/feed&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;$instagramToken&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;This code uses the deprecated Instagram endpoint &lt;code&gt;https://api.instagram.com/v1/users/self/feed&lt;/code&gt;. There is no replacement for this endpoint, but we can substitute it with another one: &lt;code&gt;https://api.instagram.com/v1/users/self/media/recent&lt;/code&gt;. This new endpoint won’t return a user’s Instagram feed, but it will return their most recent uploads, which will suffice for the example application. The updated code should look like this:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$feedRequest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Instagram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAuthenticatedRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;s1&quot;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;s1&quot;&gt;&amp;#39;https://api.instagram.com/v1/users/self/media/recent&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;$instagramToken&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;h3 id=&quot;thanks-for-reading&quot;&gt;Thanks For Reading&lt;/h3&gt;

&lt;p&gt;If you took the time to read the article, thank you so much. If you haven’t yet, &lt;a href=&quot;https://www.phparch.com/magazine/2016-2/may/&quot;&gt;go grab a copy of the May issue and read it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Please take a moment to let me know what you think. OAuth can be explained in simple terms, but to grok it, it’s difficult to distill into concise code examples. That was my goal. I’m working the article into a talk, so I’d like to know how I can improve the content and examples.&lt;/p&gt;

&lt;p&gt;On Twitter, I posted a thread of tweets where I mention a few things about OAuth and then list many of the &lt;em&gt;php[architect]&lt;/em&gt; articles that have covered it. Feel free to read through this conversation and check out the other OAuth articles to increase your own understanding.&lt;/p&gt;

&lt;div class=&quot;embed rich Twitter&quot;&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;While OAuth is used practically everywhere these days, there’s still so much misunderstanding around how it works. &lt;a href=&quot;https://twitter.com/hashtag/oauth?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#oauth&lt;/a&gt; (1/12)&lt;/p&gt;&amp;mdash; Ben Ramsey (@ramsey) &lt;a href=&quot;https://twitter.com/ramsey/status/731215630062485505?ref_src=twsrc%5Etfw&quot;&gt;May 13, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;Finally, my friend &lt;a href=&quot;https://twitter.com/shrtwhitebldguy&quot;&gt;Matt Frost&lt;/a&gt; recently wrote &lt;a href=&quot;http://phpa.me/oauthbook&quot;&gt;&lt;em&gt;Integrating Web Services with OAuth and PHP&lt;/em&gt;&lt;/a&gt;, also published by the good folks at &lt;em&gt;php[architect]&lt;/em&gt;. Check it out to learn more about OAuth versions 1 and 2.&lt;/p&gt;


                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;Mastering OAuth 2.0 Published&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2016/05/mastering-oauth2-published/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2016 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

                <category term="oauth" scheme="https://benramsey.com/ns/category"/>

        </entry>

        <entry>
            <title type="text">Post-Open Source</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2016/04/post-open-source/"/>
            <published>2016-04-26T00:00:00+00:00</published>

            <id>http://benramsey.com/blog/2016/04/post-open-source</id>
            <rights type="text">
                Copyright © 2016 Ben Ramsey.
            </rights>

            <summary type="text">I’m a tad late to this discussion, but I think it’s still pertinent today—perhaps even more so—and Jordi Boggiano’s recent post, “Common files in PHP packages,” got me thinking about the lack of open source licenses in public repositories.</summary>
            <content type="html">
                &lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;https://files.benramsey.com/ws/blog/2016-04-25-post-open-source/banner-1500x630.jpg&quot;&gt;&lt;/p&gt;
                &lt;p&gt;I’m a tad late to this discussion, but I think it’s still pertinent today—perhaps even more so—and Jordi Boggiano’s recent post, “&lt;a href=&quot;https://seld.be/notes/common-files-in-php-packages&quot;&gt;Common files in PHP packages&lt;/a&gt;,” got me thinking about the lack of open source licenses in public repositories.&lt;/p&gt;

&lt;p&gt;In his post, Jordi explains how he analyzed all packages at &lt;a href=&quot;https://packagist.org/&quot;&gt;Packagist&lt;/a&gt;, specifically for the sake of identifying common file names developers are using for their change logs. As part of that analysis, he was also able to tell how many projects have a license file, about which he writes:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;55% [of PHP packages at Packagist] have a LICENSE file, that’s.. pretty disastrous but hopefully a lot of those that don’t at least indicate in the README and composer.json&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span class=&quot;pullquote-right &quot; data-pullquote=&quot;Why are so few repositories adding open source licenses?&quot;&gt;&lt;/span&gt;
In a &lt;a href=&quot;http://www.softwarefreedom.org/resources/2013/lcs-slides-aaronw/&quot;&gt;2013 analysis&lt;/a&gt; of software licenses on Github, Aaron Williamson, then Senior Staff Counsel at the Software Freedom Law Center, found that 14.9% of repositories had a top-level license file, while 3.7% only announce the license in the project’s README&lt;sup id=&quot;fnref:analysis&quot;&gt;&lt;a href=&quot;#fn:analysis&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. Of the top licenses, he noted that there has been a significant shift since 2000 in favor of more permissive licenses (MIT, BSD, etc.) and surmises this could be the result of “corporate influence/allergy to GPL” or a reaction against the GPL, favoring “freedom of developer over freedom of users.” Why are so few repositories adding open source licenses?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://lu.is/blog/2013/01/27/taking-post-open-source-seriously-as-a-statement-about-copyright-law/&quot;&gt;Luis Villa posits&lt;/a&gt; it might be because developers are rejecting permission culture.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The open license ecosystem assumes that sharing can’t (or even shouldn’t) happen without explicit permission in the form of licenses. What if “post open source” is an implicit critique of that assumption – saying, in essence, “I reject the permission culture”?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, when James Governor posted in September 2012 his sentiment about younger developers being about “post open source software,” it was perhaps a bit of tongue-in-cheek crotchety cane-shaking about a cultural shift in developer attitudes toward open source and the need to grant permission.&lt;/p&gt;

&lt;div class=&quot;embed rich Twitter&quot;&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;younger devs today are about POSS - Post open source software. fuck the license and governance, just commit to github.&lt;/p&gt;&amp;mdash; Yan Tan Tethera (@monkchips) &lt;a href=&quot;https://twitter.com/monkchips/status/247584170967175169?ref_src=twsrc%5Etfw&quot;&gt;September 17, 2012&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;If we’re in a post-open source era and open source licenses represent permission granted to use one’s code, then is this era marked by a reaction against the need for that permission? After all, the “younger devs” grew up in a post-Napster world full of DRM, EULAs, IP/copyright lobbyists, and legalspeak about what we can and cannot do with the content and software we’ve purchased. Open source licenses are yet another way to proliferate that permission culture. It’s no wonder there’s a backlash against the need for licenses.&lt;/p&gt;

&lt;p&gt;In Lawrence Lessig’s 2004 book &lt;em&gt;Free Culture&lt;/em&gt;, Lessig warned:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Free cultures are cultures that leave a great deal open for others to build upon; unfree, or permission, cultures leave much less. Ours was a free culture. It is becoming much less so.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Are open source licenses just another manifestation of the shift to a permission culture and away from a free culture? While companies have embraced open source software and many contribute back to open source projects under a variety of permissive licenses, I can’t help but feel that open source is losing its soul. These days, I don’t hear people talking about it as a philosophy. Rather, the focus is always on licensing and business cases—the &lt;em&gt;permission&lt;/em&gt; to use it.&lt;/p&gt;

&lt;p&gt;What do you think? Do open source licenses propagate permission culture? Are we in a post-open source era?&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:analysis&quot;&gt;
      &lt;p&gt;The analysis used &lt;a href=&quot;http://www.fossology.org/&quot;&gt;FOSSology&lt;/a&gt; to examine 1,692,135 Github repositories out of about 6 million. Alternate locations of licenses could not be accounted for (file headers, subdirectories, unexpected file names, etc.). &lt;a href=&quot;#fnref:analysis&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;

                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;Post-Open Source&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2016/04/post-open-source/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2016 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

                <category term="opensource" scheme="https://benramsey.com/ns/category"/>

        </entry>

        <entry>
            <title type="text">Introducing ramsey/uuid</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2016/04/ramsey-uuid/"/>
            <published>2016-04-24T18:00:00+00:00</published>

            <id>http://benramsey.com/blog/2016/04/ramsey-uuid</id>
            <rights type="text">
                Copyright © 2016 Ben Ramsey.
            </rights>

            <summary type="text">It seems quite absurd for me to introduce ramsey/uuid, a library that saw its 1.0.0 release on July 19, 2012, and is now at version 3.4.1, having had 35 releases since its first, but what’s even more ludicrous is that I haven’t once blogged about this library. I mention it only in passing in my “...</summary>
            <content type="html">
                &lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;https://files.benramsey.com/ws/blog/2016-04-24-ramsey-uuid/banner-1500x630.jpg&quot;&gt;&lt;/p&gt;
                &lt;p class=&quot;lead-in&quot;&gt;It seems quite absurd for me to introduce ramsey/uuid, a library that saw its 1.0.0 release on July 19, 2012, and is now at version 3.4.1, having had 35 releases since its first, but what’s even more ludicrous is that I haven’t once blogged about this library. I mention it only in passing in my “&lt;a href=&quot;https://benramsey.com/blog/2014/02/dates-are-hard/&quot;&gt;Dates Are Hard&lt;/a&gt;” post. So, allow me to introduce you to perhaps a familiar face, an old friend, the &lt;a href=&quot;https://benramsey.com/projects/ramsey-uuid/&quot;&gt;ramsey/uuid library for PHP&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;beginnings&quot;&gt;Beginnings&lt;/h3&gt;

&lt;p&gt;I’ve been asked on more than one occasion why I created ramsey/uuid. Why was it needed? Why did I open source it?&lt;/p&gt;

&lt;p&gt;It all began with &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;. In 2012, Composer was taking off, and there was a lot of excitement around creating userland PHP packages and distributing them for others to use. I had contributed a number of times to open source projects, but I had never maintained one of my own. So, it began as an experiment. I wanted to experience what it was like to manage an open source project and accept pull requests, feedback, and bug reports from others.&lt;/p&gt;

&lt;p&gt;Once I had resolved to create a package for this little experiment, I needed something to work on that presented a problem I felt others in the PHP community had not yet sufficiently solved. I also looked to other programming language communities to see what problems they had solved that PHP could benefit from.&lt;/p&gt;

&lt;p&gt;At some point, I stumbled across the &lt;a href=&quot;http://docs.oracle.com/javase/6/docs/api/java/util/UUID.html&quot;&gt;Java&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/library/uuid.html&quot;&gt;Python&lt;/a&gt; UUID implementations, both of which provide rich interfaces for generating UUIDs. Aside from the &lt;a href=&quot;https://pecl.php.net/package/uuid&quot;&gt;PECL uuid&lt;/a&gt; package and a handful of small libraries generating UUIDs with &lt;code&gt;mt_rand()&lt;/code&gt;, I couldn’t find a PHP userland implementation providing functionality similar to that of the Java and Python libraries.&lt;/p&gt;

&lt;p&gt;I had found a problem in need of a PHP userland solution! I set to work right away, quickly releasing a 1.0.0 version. Little did I know this marked the beginning of a long road for a small package that would become popular and widely-used.&lt;/p&gt;

&lt;h3 id=&quot;what-is-a-uuid&quot;&gt;What is a UUID?&lt;/h3&gt;

&lt;p&gt;UUID is an acronym for &lt;em&gt;universally unique identifier&lt;/em&gt;. A UUID is a 128-bit integer with some special formatting rules based on its variant and version. When presented as a string, a UUID looks something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;379dae82-5a2b-4c4b-8193-b8e7749a3495
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A UUID aims to be &lt;em&gt;practically unique&lt;/em&gt; such that information may be uniquely identified across distributed systems, without central coordination of identifiers. There are 16&lt;sup&gt;32&lt;/sup&gt; possible UUIDs, so it’s highly unlikely that there will be a duplicate. &lt;a href=&quot;https://en.wikipedia.org/w/index.php?title=Universally_unique_identifier&amp;amp;oldid=716398107&quot;&gt;According to Wikipedia&lt;/a&gt;, for randomly generated UUIDs, “only after generating 1 billion UUIDs every second for the next 100 years, the probability of creating just one duplicate would be about 50%.”&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot;&gt;RFC 4122&lt;/a&gt; defines a specific variant of UUIDs having five versions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Version 1 is constructed from the current timestamp and local machine MAC address&lt;/li&gt;
  &lt;li&gt;Version 2 is the DCE Security version; it is similar to version 1, but RFC 4122 does not explicitly define it, so it is left out of most implementations&lt;/li&gt;
  &lt;li&gt;Version 3 is constructed from a namespace and an MD5 hash of a name; given the same namespace and name, the UUID generated will always be the same&lt;/li&gt;
  &lt;li&gt;Version 4 is randomly-generated and is probably the most common version used&lt;/li&gt;
  &lt;li&gt;Version 5 is the same as version 3, but it uses SHA-1 hashing instead; it is the preferred version for name-based UUIDs&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;whats-in-a-name&quot;&gt;What’s In a Name?&lt;/h3&gt;

&lt;figure class=&quot;quote&quot;&gt;&lt;blockquote&gt;&lt;p&gt;What’s in a name? That which we call a rose &lt;br /&gt;
By any other name would smell as sweet.&lt;/p&gt;&lt;/blockquote&gt;&lt;figcaption class=&quot;quote-source&quot;&gt;&lt;span class=&quot;quote-author&quot;&gt;Juliet&lt;/span&gt; &lt;cite class=&quot;quote-title&quot;&gt;&lt;em&gt;Romeo and Juliet&lt;/em&gt;&lt;/cite&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;If you used ramsey/uuid before the 3.x series, you’ll recall that this library began its life with the vendor name &lt;em&gt;Rhumsaa&lt;/em&gt;. There were several problems with this name. It was too close to Ramsey, so many people assumed that’s what it was. As a result, in conversation, it was referred to as Ramsey UUID, and folks searching for it would use the search terms “Ramsey UUID.” It became very confusing, and those who knew it was Rhumsaa and not Ramsey didn’t know how to pronounce it.&lt;/p&gt;

&lt;p&gt;I received complaints about &lt;a href=&quot;https://twitter.com/henrikbjorn/status/302090900052520960&quot;&gt;not remembering how to spell it&lt;/a&gt;. I heard from others who &lt;a href=&quot;https://twitter.com/Hipsterjazzbo/status/592059359833694208&quot;&gt;didn’t realize I was the package maintainer&lt;/a&gt;. One developer even encountered a problem and assumed it was a result of my “&lt;a href=&quot;https://github.com/ramsey/uuid/issues/36&quot;&gt;GitHub username change&lt;/a&gt;;” they thought I had changed my GitHub username from &lt;em&gt;rhumsaa&lt;/em&gt; to &lt;em&gt;ramsey&lt;/em&gt;, breaking the location of the package in Packagist.&lt;/p&gt;

&lt;p&gt;So, what does &lt;em&gt;rhumsaa&lt;/em&gt; mean, after all? As I wrote in my “&lt;a href=&quot;https://benramsey.com/blog/2013/08/wild-garlic/&quot;&gt;Wild Garlic&lt;/a&gt;” post, “[T]he word &lt;em&gt;rhumsaa&lt;/em&gt; is a Manx word derived from the Old Norse &lt;em&gt;hrams-á&lt;/em&gt;, meaning ‘wild garlic river.’ In English, this word is &lt;em&gt;ramsey&lt;/em&gt;.”&lt;/p&gt;

&lt;p&gt;I was attempting to be clever with my vendor name, and it caused a lot of confusion.&lt;/p&gt;

&lt;p&gt;As we were deep in the middle of development on the 3.x series, I decided a vendor name change from 2.x to 3.x might be a good idea and mitigate a lot of this confusion. I &lt;a href=&quot;https://twitter.com/ramsey/statuses/494560272326336512&quot;&gt;asked on Twitter&lt;/a&gt; and opened &lt;a href=&quot;https://github.com/ramsey/uuid/issues/48&quot;&gt;Issue #48&lt;/a&gt; to solicit feedback from the community for the name change. In the end, I made the decision to change the vendor name to Ramsey. I first updated my other Rhumsaa packages (i.e. &lt;a href=&quot;https://github.com/ramsey/twig-codeblock&quot;&gt;ramsey/twig-codeblock&lt;/a&gt;, &lt;a href=&quot;https://github.com/ramsey/vnderror&quot;&gt;ramsey/vnderror&lt;/a&gt;, etc.) and then I changed the name of ramsey/uuid for the 3.x series.&lt;/p&gt;

&lt;p&gt;I tried to make the transition as easy as possible. I’m sure there are better ways to handle changes like this, and in retrospect, I probably should have forked the package to allow projects to use both rhumsaa/uuid and ramsey/uuid together, similar to how &lt;a href=&quot;http://mtdowling.com/blog/2014/03/15/guzzle-4-rc/&quot;&gt;the Guzzle project addressed a similar namespace and package name change&lt;/a&gt;. Nevertheless, I’ve only heard from a handful of those who’ve encountered problems with the upgrade or couldn’t upgrade yet due to other packages using the older 2.x series.&lt;/p&gt;

&lt;h3 id=&quot;when-uuids-collide&quot;&gt;When UUIDs Collide&lt;/h3&gt;

&lt;p&gt;Shortly before the GA release of 3.0.0, I received a troublesome bug report. &lt;a href=&quot;https://github.com/ramsey/uuid/issues/80&quot;&gt;Issue #80&lt;/a&gt; purported to show that version 4 UUID collisions were occurring on a regular basis even in small-scale tests, and as I mentioned earlier this should not be probable. After several more corroborating reports, we were faced with a conundrum.&lt;/p&gt;

&lt;p&gt;Since I couldn’t reproduce the issue, and no one could produce a sufficient reproducible script, the issue sat around for a long time. Every couple of weeks or so, someone would chime in to ask the status or confirm they had seen collisions. &lt;a href=&quot;https://github.com/ramsey/uuid/issues/80#issuecomment-144331529&quot;&gt;It began to scare people&lt;/a&gt;, and I was worried that community confidence in the library was degrading. I was actually stressed by the whole situation; I wanted my library to be useful and dependable.&lt;/p&gt;

&lt;p&gt;Finally, after many months attempting to identify the culprit—I was certain it wasn’t inside the library’s code, since ramsey/uuid relies on external random generators—I had a conversation with &lt;a href=&quot;https://twitter.com/willemjanz&quot;&gt;Willem-Jan Zijderveld&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/ircmaxell&quot;&gt;Anthony Ferrara&lt;/a&gt; in the #phpc channel on &lt;a href=&quot;http://freenode.net/&quot;&gt;Freenode IRC&lt;/a&gt;. Willem-Jan pointed us to the &lt;a href=&quot;https://wiki.openssl.org/index.php/Random_fork-safety&quot;&gt;OpenSSL random fork-safety&lt;/a&gt; issue, where the OpenSSL project explains:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Since the UNIX fork() system call duplicates the entire process state, a
random number generator which does not take this issue into account will
produce the same sequence of random numbers in both the parent and the child
(or in multiple children), leading to cryptographic disaster (i. e. people
being able to read your communications).&lt;/p&gt;

  &lt;p&gt;OpenSSL’s default random number generator mixes in the PID, which provides a
certain degree of fork safety. However, once the PIDs wrap, new children will
start to produce the same random sequence as previous children which had the
same PID.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;They go on to say:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;OpenSSL cannot fix the fork-safety problem because it’s not in a position to do so.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;OpenSSL was the culprit. More specifically, the use of &lt;code&gt;openssl_random_pseudo_bytes()&lt;/code&gt; when using PHP in forked child processes, as is the case when using PHP with Apache or PHP-FPM. The processes were wrapping, so the children would produce the same random sequences as previous children with the same process IDs.&lt;/p&gt;

&lt;p&gt;Discovering this launched discussions on &lt;a href=&quot;https://github.com/paragonie/random_compat/issues/96&quot;&gt;what to do about OpenSSL&lt;/a&gt; for the paragonie/random_compat library. After that project decided to drop the use of OpenSSL as a fallback for generating random bytes, I decided to require paragonie/random_compat as a dependency and use &lt;code&gt;random_bytes()&lt;/code&gt; as the default random generator for ramsey/uuid. I then released versions 2.9.0 and 3.3.0 to provide versions in both 2.x and 3.x to solve this problem.&lt;/p&gt;

&lt;div class=&quot;embed rich Twitter&quot;&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;ramsey/uuid 2.9.0 &amp;amp; 3.3.0 fix the UUID collision issue caused by OpenSSL. All users should upgrade. Thanks!&lt;a href=&quot;https://t.co/N6Rwz1a5e2&quot;&gt;https://t.co/N6Rwz1a5e2&lt;/a&gt;&lt;/p&gt;&amp;mdash; Ben Ramsey (@ramsey) &lt;a href=&quot;https://twitter.com/ramsey/status/712357041822687232?ref_src=twsrc%5Etfw&quot;&gt;March 22, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;It’s interesting to note that &lt;a href=&quot;https://twitter.com/SwiftOnSecurity&quot;&gt;@SwiftOnSecurity&lt;/a&gt; picked up on the issue and posted about it:&lt;/p&gt;

&lt;div class=&quot;embed rich Twitter&quot;&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Fascinating investigation into developers getting tons of UUID collisions in small datasets  (via &lt;a href=&quot;https://twitter.com/CiPHPerCoder?ref_src=twsrc%5Etfw&quot;&gt;@CiPHPerCoder&lt;/a&gt;) &lt;a href=&quot;https://t.co/apEOzx2m3B&quot;&gt;https://t.co/apEOzx2m3B&lt;/a&gt;&lt;/p&gt;&amp;mdash; SwiftOnSecurity (@SwiftOnSecurity) &lt;a href=&quot;https://twitter.com/SwiftOnSecurity/status/713596652192313345?ref_src=twsrc%5Etfw&quot;&gt;March 26, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h3 id=&quot;and-beyond&quot;&gt;3.4.1 and Beyond&lt;/h3&gt;

&lt;p&gt;ramsey/uuid has undergone many changes since its 1.0.0 release. That very first release had some severe limitations placed on it, due to the math involved. It also had some grievous bugs because of that math. I required that everyone using the library must use a 64-bit system, and I failed to factor in the unsignedness of the integers. Since all PHP integers are signed, this led to some serious problems in generating UUIDs.&lt;/p&gt;

&lt;p&gt;The 2.x series of the library followed about seven months later, supporting both 64-bit and 32-bit systems and accounting for the unsignedness of UUID integers through the use of a BC math wrapper library, &lt;a href=&quot;https://github.com/ramsey/moontoast-math&quot;&gt;moontoast/math&lt;/a&gt;. We—for it really was a community effort—made many improvements and enhancements over the course of the 2.x series, but it was clear that more flexibility was desired, and this led to the changes in the 3.x series.&lt;/p&gt;

&lt;p&gt;The 3.x series ushered in a great deal of flexibility through interfaces and dependency injection. While the standard public API was left unchanged, all the guts of the library were completely transformed to allow anyone to use their own random generator, time provider, MAC address provider, and more.&lt;/p&gt;

&lt;p&gt;Now, as the library matures beyond the 3.4.1 version, I’m looking ahead to the 4.x series, and how it will further improve the library with more flexibility and closer adherence to RFC 4122, while providing some facilities to optimize UUIDs in databases, and more.&lt;/p&gt;

&lt;p&gt;Here are a handful of the issues I’m considering for 4.0.0. You can read more and may submit your own from the &lt;a href=&quot;https://github.com/ramsey/uuid/issues&quot;&gt;ramsey/uuid GitHub issues page&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ramsey/uuid/issues/117&quot;&gt;Store UUID in an optimized way for InnoDB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ramsey/uuid/issues/116&quot;&gt;Consider supporting version 2 DCE Security UUIDs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ramsey/uuid/issues/110&quot;&gt;Set lowest PHP version requirement to 5.6&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ramsey/uuid/issues/109&quot;&gt;Use a math library other than moontoast/math&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ramsey/uuid/issues/90&quot;&gt;Create DateTime with nanoseconds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-to-use-it&quot;&gt;How To Use It&lt;/h3&gt;

&lt;p&gt;The ramsey/uuid library provides a static interface to create immutable UUID objects for RFC 4122 variant version 1, 3, 4, and 5 UUIDs. The preferred installation method is Composer:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;composer require ramsey/uuid&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;After installation, simply require Composer’s autoloader (or use your own, or one provided by your framework of choice) and begin using the library right away, without any setup.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$uuid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\Ramsey\Uuid\Uuid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uuid4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$uuid4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;The library will make some decisions about your environment and choose the best choices for generating random or time-based UUIDs, but these are configurable. For example, if you wish to use Anthony Ferrara’s &lt;a href=&quot;https://github.com/ircmaxell/RandomLib&quot;&gt;RandomLib&lt;/a&gt; library as the random generator, you may configure the library to do so:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$factory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\Ramsey\Uuid\UuidFactory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setRandomGenerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\Ramsey\Uuid\Generator\RandomLibAdapter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nx&quot;&gt;\Ramsey\Uuid\Uuid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setFactory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$uuid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\Ramsey\Uuid\Uuid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uuid4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;If you wish to provide your own random generator, you may do so by implementing Ramsey\Uuid\Generator\RandomGeneratorInterface and setting your object as the random generator to use.&lt;/p&gt;

&lt;aside class=&quot;info&quot;&gt;&lt;blockquote&gt;&lt;em&gt;
&lt;p&gt;By default, ramsey/uuid uses &lt;code&gt;random_bytes()&lt;/code&gt; to generate version 4 UUIDs. Since &lt;code&gt;random_bytes()&lt;/code&gt; is available in PHP 7 and up, ramsey/uuid uses &lt;a href=&quot;https://github.com/paragonie/random_compat&quot;&gt;paragonie/random_compat&lt;/a&gt; to provide a polyfill for earlier versions of PHP. In most cases, &lt;code&gt;random_bytes()&lt;/code&gt; and its polyfill are sufficient random generators, and unless you have a special case, you should stick with the default.&lt;/p&gt;
&lt;/em&gt;&lt;/blockquote&gt;&lt;/aside&gt;

&lt;p&gt;Likewise, the library supports the ability to configure the time provider. If you’d like to use the PECL uuid package, for example, to generate time-based UUIDs, this is possible.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$factory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\Ramsey\Uuid\UuidFactory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTimeGenerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\Ramsey\Uuid\Generator\PeclUuidTimeGenerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nx&quot;&gt;\Ramsey\Uuid\Uuid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setFactory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$uuid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\Ramsey\Uuid\Uuid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uuid1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;There are a variety of other ways to configure ramsey/uuid. This example configures the library to generate a version 4 COMB sequential UUID with the timestamp as the first 48 bits.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$factory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\Ramsey\Uuid\UuidFactory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$generator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\Ramsey\Uuid\Generator\CombGenerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRandomGenerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumberConverter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$codec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\Ramsey\Uuid\Codec\TimestampFirstCombCodec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getUuidBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setRandomGenerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$generator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setCodec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$codec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;7&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;8&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nx&quot;&gt;\Ramsey\Uuid\Uuid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setFactory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;9&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;10&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$uuid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\Ramsey\Uuid\Uuid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uuid4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;h3 id=&quot;thanks&quot;&gt;Thanks&lt;/h3&gt;

&lt;p&gt;I couldn’t wrap up this post without thanking a few key project contributors. Were it not for the efforts of these folks, ramsey/uuid would not be the great library it is today.&lt;/p&gt;

&lt;p&gt;I want to first thank &lt;a href=&quot;https://twitter.com/huizendveld&quot;&gt;Marijn Huizendveld&lt;/a&gt;. Marijn submitted the first pull requests to ramsey/uuid and contributed the Doctrine ORM integration that I later split out into the separate &lt;a href=&quot;https://github.com/ramsey/uuid-doctrine&quot;&gt;ramsey/uuid-doctrine&lt;/a&gt; library. It was Marijn’s participation that got me excited about collaborating on an open source project and continuing the work.&lt;/p&gt;

&lt;p&gt;I owe a debt of gratitude to &lt;a href=&quot;https://twitter.com/ThibaudAztech&quot;&gt;Thibaud Fabre&lt;/a&gt; for his instrumental work in taking ramsey/uuid to version 3. He set out to re-architect the library, providing the interfaces and structure for codecs, generators, providers, and more. I’ve learned a lot about organizing software, object-oriented programming, and dependency injection from his involvement.&lt;/p&gt;

&lt;p&gt;Most recent, &lt;a href=&quot;https://twitter.com/JessicaMauerhan&quot;&gt;Jessica Mauerhan&lt;/a&gt; has been a force for improving our test suite, improving overall test coverage and adding tests for internal bits that were covered but not fully tested. I’ve learned a great deal about testing from her contributions.&lt;/p&gt;

&lt;p&gt;Last but definitely not least, there are many more without whose contributions ramsey/uuid would be a lesser library. I am grateful to you all for your hard work and help in making ramsey/uuid an awesome library.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ramsey/uuid/graphs/contributors&quot;&gt;List of ramsey/uuid contributors&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ramsey/uuid-doctrine/graphs/contributors&quot;&gt;List of ramsey/uuid-doctrine contributors&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ramsey/uuid-console/graphs/contributors&quot;&gt;List of ramsey/uuid-console contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cheers!&lt;/p&gt;


                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;Introducing ramsey/uuid&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2016/04/ramsey-uuid/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2016 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

                <category term="uuid" scheme="https://benramsey.com/ns/category"/>

        </entry>

        <entry>
            <title type="text">Hour of Code</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2015/12/hour-of-code/"/>
            <published>2015-12-21T00:00:00+00:00</published>

            <id>http://benramsey.com/blog/2015/12/hour-of-code</id>
            <rights type="text">
                Copyright © 2015 Ben Ramsey.
            </rights>

            <summary type="text">I volunteered to help with an Hour of Code during Computer Science Education Week. This is my story, with a few tips to help when you volunteer.</summary>
            <content type="html">
                &lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;https://files.benramsey.com/ws/blog/2015-12-21-hour-of-code/banner-1500x630.jpg&quot;&gt;&lt;/p&gt;
                &lt;p&gt;It was dark when I pulled into the parking lot of the middle school where I would spend the next hour volunteering for the &lt;a href=&quot;https://code.org/learn&quot;&gt;Hour of Code&lt;/a&gt;. I had no idea what to expect. I hadn’t spoken much with the site coordinator, and I thought 5pm was an odd time to host the event.&lt;/p&gt;

&lt;p&gt;I’ve spoken numerous times at many conferences but never about technology to middle-grades students. I wanted to instill in them a love for technology, but I wasn’t sure how to relate to them, and so I ran over and over in my head different scenarios of things I would say and questions they might ask. I was nervous on a different level.&lt;/p&gt;

&lt;p&gt;“What if I say the wrong thing and turn them off to programming?”&lt;/p&gt;

&lt;p&gt;“What if I bore them, and they think coding is boring?”&lt;/p&gt;

&lt;p&gt;The school day had ended some time ago, and I walked along quiet, locker-lined halls, as I made my way to the classroom, smelling those once-familiar, musty smells of decades-old, concrete block school buildings. Down a hall, somewhere, a floor cleaning machine hummed, as a custodian buffed the white, vinyl tile floors. I recalled many hours I had spent at school after hours for extracurricular activities.&lt;/p&gt;

&lt;p&gt;I spoke briefly to Kathy, the site coordinator, before entering the classroom, and I learned that the school has a variety of after-school programs their students participate in. This one happened to be the STEM program. They were mainly focused on conducting science experiments, but they decided to do the Hour of Code during &lt;a href=&quot;https://csedweek.org/&quot;&gt;Computer Science Education Week&lt;/a&gt; this year. She had never done the Hour of Code and had requested a volunteer to help out. I was to be the one leading the entire program.&lt;/p&gt;

&lt;p&gt;No problem. Winging things is my specialty. So, that’s what I did.&lt;/p&gt;

&lt;p&gt;I spent a few minutes telling about what I do as a programmer on a daily basis, and I quickly realized that, while I’m passionate about what I do, it can sound rather banal when being explained to others, so I switched gears. I told them a brief version of my &lt;a href=&quot;https://en.wikipedia.org/wiki/Origin_story&quot;&gt;origin story&lt;/a&gt;, so to speak.&lt;/p&gt;

&lt;p&gt;I began with a question: “Who has ever written code?” No one raised their hands, so I pressed on.&lt;/p&gt;

&lt;p&gt;“I wrote my first computer program when I was in fourth grade. It was a Mad Lib generator.” The students seemed to perk up and get interested at this.&lt;/p&gt;

&lt;p&gt;I continued with my brief introduction to tell them that I went on to build my high school’s first web site back in 1995, but I never saw programming as a career. It had always been a hobby for me. Then, I stumbled into a job building web sites and doing sever-side programming, while I was still in college. It wasn’t until a professor convinced me to keep my job and drop the education requirements of my degree (student teaching, etc.) that I began to see my hobby as a career. I wanted to impress upon the students that careers don’t have to be boring things—they can be the things we are passionate and excited about. The things we enjoy doing in our free time are things that we can do for a living.&lt;/p&gt;

&lt;p&gt;From there, I had them open up &lt;a href=&quot;https://code.org/&quot;&gt;code.org&lt;/a&gt; on their Chromebooks and click the “Start learning” button. They chose the “Learn an Hour of Code” exercise that appealed most to them and proceeded to complete the steps. Some students breezed through the activities, while others struggled with the concepts. I used this as a teaching point, since my primary goal was to teach the students that failure and trial-and-error are natural parts of coding. If something doesn’t work the first time, then keep trying until it does work. Sometimes it takes many attempts before you get it.&lt;/p&gt;

&lt;p&gt;After Kathy asked me several questions about the history of programming, I decided to wrap things up and try to answer her questions in a brief review of what the students had learned. I asked them what their favorite part of the exercise was and what they felt the most difficult part was. The answers varied. Then, I introduced a tiny bit of computer science history with a discussion of &lt;a href=&quot;https://en.wikipedia.org/wiki/ENIAC&quot;&gt;ENIAC&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Software_bug&quot;&gt;bugs&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Grace_Hopper&quot;&gt;Grace Hopper&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;By then, our hour was up, and it was time for the students and myself to go. The time had been all-too-short, but I will volunteer again, and I learned a few things that I’ll keep in mind for the next time. I encourage you to volunteer, and I’m sharing my take-aways to help you when you do:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Don’t spend a lot of time talking. Get the students right into the coding exercises.&lt;/li&gt;
  &lt;li&gt;Chances are, the teachers you are working with haven’t been through the Code.org exercises. If they contact you through the &lt;a href=&quot;https://code.org/volunteer&quot;&gt;Code.org volunteer site&lt;/a&gt;, they probably think you’ll be prepared to lead the class. So, be prepared to lead.&lt;/li&gt;
  &lt;li&gt;Code.org provides teacher notes for each of their exercises. Familiarize yourself with the exercises and the notes.&lt;/li&gt;
  &lt;li&gt;Tell the students what you do for a living, but don’t focus too much on the specifics of your job. Our jobs are mostly boring to adolescents, unless we’re video game designers or movie animators.&lt;/li&gt;
  &lt;li&gt;Do tell what made you interested in coding and how you got started.&lt;/li&gt;
  &lt;li&gt;Tell about the first program you wrote.&lt;/li&gt;
  &lt;li&gt;Make sure you point out the importance of failure in writing code. Almost everything I have learned in coding has been a result of failure through trial-and-error. Students need to know how important this is.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Interested in volunteering for an Hour of Code near you? &lt;a href=&quot;https://code.org/volunteer&quot;&gt;Sign up here to have teachers contact you&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;Hour of Code&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2015/12/hour-of-code/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2015 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

        </entry>

        <entry>
            <title type="text">Yak Shaving Is the Entire Job Description</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2015/11/yak-shaving/"/>
            <published>2015-11-30T00:00:00+00:00</published>

            <id>http://benramsey.com/blog/2015/11/yak-shaving</id>
            <rights type="text">
                Copyright © 2015 Ben Ramsey.
            </rights>

            <summary type="text">A recent struggle to solve a programming problem reminded me that yak shaving isn't just part of our jobs, it's the entire job description.</summary>
            <content type="html">
                &lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;https://files.benramsey.com/ws/blog/2015-11-30-yak-shaving/banner-1500x630.jpg&quot;&gt;&lt;/p&gt;
                &lt;p&gt;Earlier this year, I worked on a solution to help us manage changes and history when maintaining different versions of Amazon Machine Images (AMIs). I entertained a wide range of ideas from &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; to &lt;a href=&quot;https://aws.amazon.com/cloudformation/&quot;&gt;AWS CloudFormation&lt;/a&gt; to a collection of shell scripts.&lt;/p&gt;

&lt;p&gt;Finally, after asking in #pynash (Nashville’s Python user group) on Freenode IRC, &lt;a href=&quot;http://jasonamyers.com/&quot;&gt;Jason Myers&lt;/a&gt; pointed me to &lt;a href=&quot;https://packer.io/&quot;&gt;Packer&lt;/a&gt; as a potential solution.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Packer is a tool for creating machine and container images for multiple platforms from a single source configuration.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Packer turned out to be the right tool for the job, but I almost scrapped it, since I ran into a few problems.&lt;/p&gt;

&lt;p&gt;When I began my journey as a programmer, every task was fraught with problems, and I loved it. Everything was new, and every problem was an opportunity to learn and grow. It was great.&lt;/p&gt;

&lt;p&gt;Somewhere along the way, though, problems became nuisances. As I grew older in life and my career, my tolerance for problems became lower, and my desire for things to Just Work™ became greater.&lt;/p&gt;

&lt;p&gt;As I struggled to find a solution for the problem I had with Packer, &lt;a href=&quot;http://www.tateeskew.com/&quot;&gt;Tate Eskew&lt;/a&gt; reminded me that &lt;a href=&quot;https://en.wiktionary.org/wiki/yak_shaving&quot;&gt;yak shaving&lt;/a&gt; is a part of my job.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;teskew&amp;gt; &lt;/span&gt;i&amp;#39;d just patch it, then. keep it in a central place so you only compile it once.
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;         then when it&amp;#39;s put into mainline, just switch out the binary
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;teskew&amp;gt; &lt;/span&gt;either way, it&amp;#39;s a pretty simple patch to test and change
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ramsey&amp;gt; &lt;/span&gt;ugh… gotta set up an environment just to build packer
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ramsey&amp;gt; &lt;/span&gt;&amp;quot;simple&amp;quot;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;teskew&amp;gt; &lt;/span&gt;you act like yak-shaving isn&amp;#39;t the name of the game
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;7&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ramsey&amp;gt; &lt;/span&gt;:P
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;8&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;teskew&amp;gt; &lt;/span&gt;hell, it&amp;#39;s the entire job description
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;9&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;teskew&amp;gt; &lt;/span&gt;:)
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;10&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ramsey&amp;gt; &lt;/span&gt;I am not an ops person
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;11&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;teskew&amp;gt; &lt;/span&gt;you are right now :)&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;I ended up &lt;a href=&quot;https://github.com/ramsey/packer/commit/016992bb5dcfdf9a62336ac135725cf0c1487ee4&quot;&gt;patching Packer&lt;/a&gt; for my needs, and I had fun doing it. I learned a valuable lesson that day: Despite how we may gripe and complain about shaving yaks, it’s part of our job as programmers and problem solvers, and often, it’s the part that brings us the most satisfaction. I’ve learned to embrace yak shaving, and doing so has changed my outlook on my job, open source contributions, and community organizing.&lt;/p&gt;

&lt;p&gt;Yak shaving isn’t just part of our jobs, it’s the entire job description.&lt;/p&gt;

                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;Yak Shaving Is the Entire Job Description&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2015/11/yak-shaving/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2015 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

                <category term="job" scheme="https://benramsey.com/ns/category"/>

        </entry>

        <entry>
            <title type="text">Lack of Hypermedia</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2015/11/lack-of-hypermedia/"/>
            <published>2015-11-27T00:00:00+00:00</published>

            <id>http://benramsey.com/blog/2015/11/lack-of-hypermedia</id>
            <rights type="text">
                Copyright © 2015 Ben Ramsey.
            </rights>

            <summary type="text">One of the most common problems I see in API development is lack of hypermedia, or none at all.</summary>
            <content type="html">

                &lt;p&gt;&lt;a href=&quot;https://twitter.com/JustinRohrman&quot;&gt;Justin Rohrman&lt;/a&gt;, a former co-worker of mine, recently posted “&lt;a href=&quot;http://blog.smartbear.com/apis/6-reasons-your-api-is-the-windows-vista-of-apis/&quot;&gt;6 Reasons Your API is the Windows Vista of APIs&lt;/a&gt;.” For his article, he asked me:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I was wondering if you might give me a short description of what you see as one of the biggest API problems?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I thought it might be helpful to post my full response, which follows:&lt;/p&gt;

&lt;p&gt;One of the most common problems I see in API development is lack of hypermedia, or none at all. By hypermedia, I mean links that describe relationships among data in the API. When hypermedia isn’t used, the API becomes brittle, and those building clients that talk to the API are forced to code to URLs. The URLs become an important interface to the API, and if they change, they break everything. This leads to URL-based versioning schemes, and the only upgrade path for clients is to modify their code to accommodate the new versions.&lt;/p&gt;

&lt;p&gt;When an API uses hypermedia, the URLs are no longer important. Clients talking to the API do not need to code to URLs because the API will always convey where to go next through hypermedia relationships. If a URL changes, then there’s no problem. The change gets communicated through the API. This leads to a more flexible and evolvable API that can change over time without needing to update all the clients.&lt;/p&gt;

&lt;p&gt;I gave a talk at True North PHP this year that covered this topic. &lt;a href=&quot;https://benramsey.com/talks/2015/11/truenorthphp-great-apis/&quot;&gt;The slides are available for download.&lt;/a&gt;&lt;/p&gt;

                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;Lack of Hypermedia&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2015/11/lack-of-hypermedia/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2015 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

                <category term="api" scheme="https://benramsey.com/ns/category"/>

                <category term="hypermedia" scheme="https://benramsey.com/ns/category"/>

        </entry>

        <entry>
            <title type="text">Día de Muertos</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2015/11/dia-de-muertos/"/>
            <published>2015-11-01T00:00:00+00:00</published>

            <id>http://benramsey.com/blog/2015/11/dia-de-muertos</id>
            <rights type="text">
                Copyright © 2015 Ben Ramsey.
            </rights>

            <summary type="text">Remembering PHP community members who have died.</summary>
            <content type="html">
                &lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;https://files.benramsey.com/ws/blog/2015-11-01-dia-de-muertos/banner-1500x630.jpg&quot;&gt;&lt;/p&gt;
                &lt;p&gt;I’m fascinated by the Mexican traditions observed on &lt;a href=&quot;https://en.wikipedia.org/wiki/Day_of_the_Dead&quot;&gt;Día de Muertos&lt;/a&gt;, or Day of the Dead. It’s a time for celebrating and remembering friends and family who have died.&lt;/p&gt;

&lt;p&gt;This year, we have lost a few members of the PHP community, and on this Day of the Dead, I wanted to take a moment to remember some of the PHP community members who have died over the past few years.&lt;/p&gt;

&lt;p&gt;If I am missing anyone, please use the comments to remember others, and leave your own remembrances for these.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;Richard “Cyberlot” Thomas&lt;/dt&gt;
  &lt;dd&gt;I met Cyberlot first online in the &lt;code&gt;#phpc&lt;/code&gt; IRC channel on Freenode. I saw him at occasional conferences, and I was sad to hear of his death in November 2010. He was an active contributor to the Solar framework project. Shortly after his death, &lt;a href=&quot;http://web.archive.org/web/20101216031515/http://www.procata.com/blog/archives/2010/12/10/richard-thomas&quot;&gt;Jeff Moore wrote a post remembering Cyberlot&lt;/a&gt;.&lt;/dd&gt;
  &lt;dt&gt;Nick Jones&lt;/dt&gt;
  &lt;dd&gt;Nick was founder of the &lt;a href=&quot;https://www.php-fusion.co.uk/&quot;&gt;PHP-Fusion&lt;/a&gt; project. The PHP-Fusion project maintains a &lt;a href=&quot;https://www.php-fusion.co.uk/infusions/book_of_condolences/condolences.php&quot;&gt;book of condolences&lt;/a&gt; remembering his life and contributions.&lt;/dd&gt;
  &lt;dt&gt;Jeff Surgeson&lt;/dt&gt;
  &lt;dd&gt;Jeff was a contributor to the Aura and Solar framework projects.&lt;/dd&gt;
  &lt;dt&gt;Richard Lynch&lt;/dt&gt;
  &lt;dd&gt;Richard was one of the first people I met in the PHP community, having interacted with him a great deal on the php-general mailing list. He &lt;a href=&quot;https://benramsey.com/blog/2015/07/chicago-php/&quot;&gt;founded the Chicago PHP user group&lt;/a&gt;, and was always willing to help newcomers with questions.&lt;/dd&gt;
  &lt;dt&gt;Jefferson McCree Jones&lt;/dt&gt;
  &lt;dd&gt;I met Jefferson first on IRC in the &lt;code&gt;#phpc&lt;/code&gt; channel. He attended the second PHP Appalachia, and I began taking him to Atlanta PHP meetings. We were roommates at a number of conferences, and his enthusiasm for technology and jovial attitude touched many. Jefferson was a great friend. I miss him dearly.&lt;/dd&gt;
  &lt;dt&gt;Mike Dugan&lt;/dt&gt;
  &lt;dd&gt;Mike was an active member of the PHP community and frequent blogger. &lt;a href=&quot;https://twitter.com/kayladnls&quot;&gt;Kayla Daniels&lt;/a&gt; set up a &lt;a href=&quot;http://rememberingmikedugan.com/&quot;&gt;memorial fund for his family&lt;/a&gt; in his memory.&lt;/dd&gt;
  &lt;dt&gt;Alex King&lt;/dt&gt;
  &lt;dd&gt;Alex was a contributor to WordPress, having begun working with the project in its early b2 days. &lt;a href=&quot;http://ma.tt/2015/09/remembering-alex-king/&quot;&gt;Matt Mullenweg wrote a post remembering him&lt;/a&gt;.&lt;/dd&gt;
&lt;/dl&gt;


                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;Día de Muertos&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2015/11/dia-de-muertos/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2015 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

        </entry>

        <entry>
            <title type="text">Chicago PHP First Met in 2000, Not 1997</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2015/07/chicago-php/"/>
            <published>2015-07-28T00:00:00+00:00</published>

                <updated>2015-07-28T13:30:00+00:00</updated>

            <id>http://benramsey.com/blog/2015/07/chicago-php</id>
            <rights type="text">
                Copyright © 2015 Ben Ramsey.
            </rights>

            <summary type="text">For many years, I’ve claimed that Chicago PHP held its first meeting in February of 1997. Unfortunately, I was wrong.</summary>
            <content type="html">
                &lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;https://files.benramsey.com/ws/blog/2015-07-27-chicago-php/banner-1500x630.jpg&quot;&gt;&lt;/p&gt;
                &lt;p&gt;For many years, I’ve been claiming that Chicago PHP is the oldest, continuous-running PHP user group. This single fact hinged on &lt;a href=&quot;http://web.archive.org/web/20061215165756/http://chiphpug.php.net/mpug.htm&quot;&gt;a page&lt;/a&gt; that, for many years, was hosted at &lt;code&gt;chiphpug.php.net&lt;/code&gt; as a historical reference. On this page, it stated:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The first meeting of the Midwest PHP User’s Group (MPUG) will be held at:&lt;/p&gt;

  &lt;p&gt;Saturday, February 26th, 1997, 1 pm CST &lt;br /&gt;
Ignition State&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’ve been passing along this information over the years to various members of the community. Most recent, I published it in an &lt;a href=&quot;http://www.infoworld.com/article/2933858/php/php-at-20-from-pet-project-to-powerhouse.html&quot;&gt;InfoWorld article reflecting on PHP at 20 years&lt;/a&gt;. However, today this fact was called into question and debunked because &lt;a href=&quot;https://twitter.com/Adduc/status/625712790913724416&quot;&gt;John Long happened to link to an old mailing list post from 2000&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In &lt;a href=&quot;http://grokbase.com/t/php/php-version3/002vx7f6ar/ann-chiphpug-fka-mpug-meeting&quot;&gt;the post dated February 26, 2000&lt;/a&gt;, Richard Lynch says:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The first Chicago PHP User’s Group, CHIPHPUG, [CHIF pug] meeting went very
well!&lt;/p&gt;

  &lt;p&gt;It was originally announced as MPUG, but even &lt;em&gt;I&lt;/em&gt; didn’t really like that
name: It was just convenient. :-)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After seeing this, I assumed the year must have been wrong. I thought maybe Grokbase had a bug, but then John pointed to &lt;a href=&quot;http://news.php.net/php.version3/78555&quot;&gt;the same post on news.php.net&lt;/a&gt;. After this, I did some more exploring only to find &lt;a href=&quot;http://grokbase.com/t/php/php-version3/002q7ffmrd/php3-ann-midwest-php-users-group-meeting&quot;&gt;a post dated February 23, 2000&lt;/a&gt;, where the “very first Midwest PHP User’s Group meeting” was announced.&lt;/p&gt;

&lt;p&gt;The language used in the post was very similar to that found on the historical page; it’s missing the year.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The very first Midwest PHP User’s Group meeting is definitely “on”:&lt;/p&gt;

  &lt;p&gt;Saturday, February 26th, 1 pm CST &lt;br /&gt;
Ignition State&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This post also links to &lt;code&gt;http://www.L-I-E.com/MPUG.htm&lt;/code&gt;, a page on Richard’s domain. I looked up &lt;a href=&quot;http://web.archive.org/web/20000408233004/http://www.l-i-e.com/MPUG.htm&quot;&gt;this page on the Internet Archive&lt;/a&gt; to find that it is identical to the historical reference page that used to be hosted at &lt;code&gt;chiphpug.php.net&lt;/code&gt;, with one exception. The year 1997 was erringly added to the historical reference page.&lt;/p&gt;

&lt;p&gt;To confirm, I found the &lt;a href=&quot;http://web.archive.org/web/20000818110408/http://chiphpug.php.net/&quot;&gt;very first Internet Archive capture for chiphpug.php.net&lt;/a&gt;, where it identifies the first meeting of the Chicago PHP user group as Saturday, February 26, 2000. It turns out February 26, 1997, was a Wednesday, while the historical reference page identified it as a Saturday, further proof the year was wrong.&lt;/p&gt;

&lt;p&gt;I’m sorry for all the confusion I might have caused, and now that we know the truth, it’s time to find out which group really is the oldest, continuous-running PHP user group.&lt;/p&gt;

                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;Chicago PHP First Met in 2000, Not 1997&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2015/07/chicago-php/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2015 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

                <category term="phpgroups" scheme="https://benramsey.com/ns/category"/>

        </entry>

        <entry>
            <title type="text">Composer: Missing Distributions For Explict References</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2015/06/composer-missing-distributions/"/>
            <published>2015-06-17T22:30:00+00:00</published>

                <updated>2015-06-19T20:40:00+00:00</updated>

            <id>http://benramsey.com/blog/2015/06/composer-missing-distributions</id>
            <rights type="text">
                Copyright © 2015 Ben Ramsey.
            </rights>

            <summary type="text">I prefer to hard-lock Composer dependencies for non-distributed apps, including hard-locking to a specific commit. Today, I encountered a problem…</summary>
            <content type="html">
                &lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;https://files.benramsey.com/ws/blog/2015-06-17-composer-missing-distributions/banner-1500x630.jpg&quot;&gt;&lt;/p&gt;
                &lt;aside class=&quot;success&quot;&gt;&lt;blockquote&gt;&lt;em&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/wim_vds&quot;&gt;Wim Vandersmissen&lt;/a&gt; was kind enough to correct this behavior with a &lt;a href=&quot;https://github.com/composer/composer/pull/4167&quot;&gt;pull request&lt;/a&gt; to the Composer project, which &lt;a href=&quot;http://seld.be/&quot;&gt;Jordi&lt;/a&gt; merged in. If you run &lt;code&gt;composer self-update&lt;/code&gt;, it will update Composer with these changes, and &lt;code&gt;--prefer-dist&lt;/code&gt; will behave properly to retrieve distribution zip archives for explicit references from Bitbucket.&lt;/p&gt;
&lt;/em&gt;&lt;/blockquote&gt;&lt;/aside&gt;

&lt;p&gt;This came as a bit of a surprise to me today, so I wanted to post it here to help others, in case you run into similar problems.&lt;/p&gt;

&lt;p&gt;For applications I control that are not distributed to the public, I like to hard-lock my &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt; dependencies to a specific version. I don’t use tilde, asterisk, caret, ranges, etc. to specify dependencies. I use the specific version number I want (i.e. &lt;code&gt;3.7.1&lt;/code&gt;). This gives me piece of mind that application code I have already tested is not going to change behavior simply because underlying libraries I’m using have changed. It also gives me the flexibility to upgrade dependencies on my own terms.&lt;/p&gt;

&lt;aside class=&quot;danger&quot;&gt;&lt;blockquote&gt;&lt;em&gt;&lt;h5&gt;Use Flexible Dependencies for Public Libraries&lt;/h5&gt;
&lt;p&gt;I do not advocate this approach if you are developing a library for public distribution. Public libraries need to have flexible dependencies so that Composer can choose to the best possible version for other libraries requiring different versions of the same dependency.&lt;/p&gt;
&lt;/em&gt;&lt;/blockquote&gt;&lt;/aside&gt;

&lt;p&gt;Sometimes a library has updates that haven’t yet been released, and I need to use these right away. Composer allows me to specify the specific commit I want to use for a library. In this way, I can hard-lock a dependency to a specific state, even when there is not yet a release for the changes I need.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;require&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;quot;acme/foo&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;dev-master#b96ab0ce4a&amp;quot;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;This has worked well until today, when I tried to do a fresh &lt;code&gt;composer install&lt;/code&gt;. After installing, one library contained files and methods that I did not expect. It turns out Composer was grabbing the HEAD of dev-master instead of the specific commit I referenced.&lt;/p&gt;

&lt;p&gt;When I looked in &lt;code&gt;vendor/composer/installed.json&lt;/code&gt;, it became clear what was happening. The relevant entry looked a little something like this:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;acme/foo&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;dev-master&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;version_normalized&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;9999999-dev&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;source&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;git&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;7&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://bitbucket.org/acme/foo.git&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;8&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;quot;reference&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;b96ab0ce4a&amp;quot;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;9&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;10&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;dist&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;11&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;zip&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;12&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://bitbucket.org/acme/foo/get/03ae0dba64d1a902fb4d76004ef12c8391ededc8.zip&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;13&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;quot;reference&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;b96ab0ce4a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;14&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;quot;shasum&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;15&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;16&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;require&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;17&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;quot;php&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;gt;=5.2.0&amp;quot;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;18&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;19&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;time&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;2015-03-23 22:00:25&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;20&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;library&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;21&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;installation-source&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;dist&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;22&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;autoload&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;23&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;quot;psr-0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;#x7b;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;24&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;            &lt;span class=&quot;nt&quot;&gt;&amp;quot;Acme&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;src/&amp;quot;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;25&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;        &lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;26&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;p&quot;&gt;&amp;#x7d;,&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;27&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;An example library&amp;quot;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;28&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;p&quot;&gt;&amp;#x7d;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Notice in line 21 that my installation-source is “dist,” and in the dist section it shows a zip file URL referring to a different commit hash than the reference (line 12 vs. line 13). This is because &lt;a href=&quot;https://bitbucket.org/&quot;&gt;Bitbucket&lt;/a&gt; provides a distribution zip file for the current HEAD of the branch, but not the specific commit I need.&lt;/p&gt;

&lt;p&gt;Since &lt;code&gt;composer install&lt;/code&gt; uses &lt;code&gt;--prefer-dist&lt;/code&gt; by default, I was getting the distribution zip file provided by Bitbucket for the HEAD of the master branch, rather than for the specific commit I needed.&lt;/p&gt;

&lt;aside class=&quot;info&quot;&gt;&lt;blockquote&gt;&lt;em&gt;&lt;h5&gt;GitHub Provides a Zip Archive for Each Commit&lt;/h5&gt;
&lt;p&gt;It appears that this problem does not exist on GitHub. GitHub provides the ability to download a zip archive of every single commit, and Composer grabs the correct distribution for the explicit reference.&lt;/p&gt;
&lt;/em&gt;&lt;/blockquote&gt;&lt;/aside&gt;

&lt;p&gt;When providing the &lt;code&gt;--prefer-source&lt;/code&gt; option to &lt;code&gt;composer install&lt;/code&gt;, I was able to retrieve the exact commit I wanted. Problem solved!&lt;/p&gt;

&lt;p&gt;Unfortunately, using &lt;code&gt;--prefer-source&lt;/code&gt; is slower and downloads VCS files (i.e. &lt;code&gt;.git/&lt;/code&gt;), as well as files that are marked as &lt;code&gt;export-ignore&lt;/code&gt; in &lt;code&gt;.gitattributes&lt;/code&gt; (since Composer isn’t getting the exported distribution archive but is cloning the repository itself).&lt;/p&gt;

                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;Composer: Missing Distributions For Explict References&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2015/06/composer-missing-distributions/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2015 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

        </entry>

        <entry>
            <title type="text">Reflecting on PHP at 20</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2015/06/php-at-20/"/>
            <published>2015-06-11T21:30:00+00:00</published>

                <updated>2015-06-25T15:22:00+00:00</updated>

            <id>http://benramsey.com/blog/2015/06/php-at-20</id>
            <rights type="text">
                Copyright © 2015 Ben Ramsey.
            </rights>

            <summary type="text">In this post, I discuss my InfoWorld article, @phpc's timeline, #20yearsofphp hashtag, PHP cake, and community posts reflecting on 20 years of PHP.</summary>
            <content type="html">
                &lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;https://files.benramsey.com/ws/blog/2015-06-11-php-at-20/banner-1500x630.jpg&quot;&gt;&lt;/p&gt;
                &lt;h3 id=&quot;infoworld-article-published&quot;&gt;InfoWorld Article Published&lt;/h3&gt;

&lt;p&gt;Today, my article “&lt;a href=&quot;http://www.infoworld.com/article/2933858/php/php-at-20-from-pet-project-to-powerhouse.html&quot; data-versionurl=&quot;http://web.archive.org/web/20150611131243/http://www.infoworld.com/article/2933858/php/php-at-20-from-pet-project-to-powerhouse.html&quot; data-versiondate=&quot;2015-06-11&quot;&gt;PHP at 20: From pet project to powerhouse&lt;/a&gt;” was published in &lt;a href=&quot;http://www.infoworld.com/&quot;&gt;InfoWorld&lt;/a&gt;. The article discusses the origins of PHP, how it and its community pride themselves in pragmatic approaches to solving problems, and how it is relevant and evolving today. It even got &lt;a href=&quot;http://developers.slashdot.org/story/15/06/11/1659201/php-at-20-from-pet-project-to-powerhouse&quot; data-versionurl=&quot;https://web.archive.org/web/20150611193021/http://developers.slashdot.org/story/15/06/11/1659201/php-at-20-from-pet-project-to-powerhouse&quot; data-versiondate=&quot;2015-06-11&quot;&gt;linked to from Slashdot&lt;/a&gt;, which is exciting. Just don’t bother reading the comments. ;-)&lt;/p&gt;

&lt;p&gt;I had a great time putting together this article, and the research I did jogged more than a few memories, allowing me to indulge in a bit of nostalgia.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;When Rasmus Lerdorf released “&lt;a href=&quot;https://groups.google.com/d/msg/comp.infosystems.www.authoring.cgi/PyJ25gZ6z7A/M9FkTUVDfcwJ&quot;&gt;a set of small tight CGI binaries written in C&lt;/a&gt;,” he had no idea how much his creation would impact Web development. Delivering the opening keynote at this year’s SunshinePHP conference in Miami, Lerdorf quipped, “In 1995, I thought I had unleashed a C API upon the Web. Obviously, that’s not what happened, or we’d all be C programmers.”&lt;/p&gt;

  &lt;p&gt;[…]&lt;/p&gt;

  &lt;p&gt;Those early days speak volumes about PHP’s impact on Web development. Back then, our options were limited when it came to server-side processing for Web apps. PHP stepped in to fill our need for a tool that would enable us to do dynamic things on the Web. That practical flexibility captured our imaginations, and PHP has since grown up with the Web. Now powering &lt;a href=&quot;http://w3techs.com/technologies/overview/programming_language/all&quot;&gt;more than 80 percent of the Web&lt;/a&gt;, PHP has matured into a scripting language that is especially suited to solve the Web problem. Its unique pedigree tells a story of pragmatism over theory and problem solving over purity.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You may &lt;a href=&quot;http://www.infoworld.com/article/2933858/php/php-at-20-from-pet-project-to-powerhouse.html&quot; data-versionurl=&quot;http://web.archive.org/web/20150611131243/http://www.infoworld.com/article/2933858/php/php-at-20-from-pet-project-to-powerhouse.html&quot; data-versiondate=&quot;2015-06-11&quot;&gt;read the rest in InfoWorld&lt;/a&gt;. I hope you like it.&lt;/p&gt;

&lt;h3 id=&quot;a-timeline-spanning-twenty-years&quot;&gt;A Timeline Spanning Twenty Years&lt;/h3&gt;

&lt;p&gt;Last weekend, an idea occurred to me to use the &lt;a href=&quot;https://twitter.com/phpc&quot;&gt;@phpc&lt;/a&gt; Twitter account to celebrate PHP’s twentieth birthday in a unique way: by posting &lt;a href=&quot;http://devzone.zend.com/6178/20yearsofphp-a-timeline-of-tweets/&quot;&gt;a timeline of events in the PHP community&lt;/a&gt; spanning the past twenty years. It was a lofty goal, and as I was wrapping up my InfoWorld article, I pieced together a timeline of events and scheduled them to be posted about every half hour.&lt;/p&gt;

&lt;div class=&quot;embed rich Twitter&quot;&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;On 8 June 1995, &lt;a href=&quot;https://twitter.com/rasmus?ref_src=twsrc%5Etfw&quot;&gt;@rasmus&lt;/a&gt; releases the source code for PHP Tools version 1.0. &lt;a href=&quot;https://t.co/13WJfVo33b&quot;&gt;https://t.co/13WJfVo33b&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/20yearsofphp?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#20yearsofphp&lt;/a&gt;&lt;/p&gt;&amp;mdash; PHP Community (@phpc) &lt;a href=&quot;https://twitter.com/phpc/status/607842014369968128?ref_src=twsrc%5Etfw&quot;&gt;June 8, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;I regard each event in this timeline as important to the history of PHP, having shaped the language and community into what they are today. These events, however, are by no means the only important events. It was impossible to put together a complete list that included every project and every person who has made significant contributions to PHP and its community. I’m sorry if you and your project were left out, but please understand I do not intend any ill will.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.calevans.com/&quot;&gt;Cal Evans&lt;/a&gt; was kind enough to capture the timeline in a &lt;a href=&quot;https://storify.com/calevans/20yearsofphp&quot;&gt;Storify&lt;/a&gt; and post it on &lt;a href=&quot;http://devzone.zend.com/6178/20yearsofphp-a-timeline-of-tweets/&quot;&gt;Zend Developer Zone&lt;/a&gt;. From there, you may read all the posts in the timeline.&lt;/p&gt;

&lt;h4 id=&quot;yearsofphp-hashtag&quot;&gt;#20yearsofphp Hashtag&lt;/h4&gt;

&lt;p&gt;I also advocated the use of the &lt;a href=&quot;https://twitter.com/hashtag/20yearsofphp&quot;&gt;#20yearsofphp hashtag&lt;/a&gt; to help everyone follow along the conversation throughout the day.&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;twitter-timeline&quot; data-dnt=&quot;true&quot; href=&quot;https://twitter.com/hashtag/20yearsofphp&quot; data-widget-id=&quot;609105033112760320&quot;&gt;#20yearsofphp Tweets&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&#39;http&#39;:&#39;https&#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&quot;://platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;a-birthday-cake-for-php&quot;&gt;A Birthday Cake for PHP&lt;/h3&gt;

&lt;p&gt;For the June 2015 &lt;a href=&quot;http://nashvillephp.org/&quot;&gt;Nashville PHP&lt;/a&gt; user group meeting this past Tuesday, I had some fun and got a cake so that our user group could join in the 20th birthday celebration. That’s our group in the cover photo for this post.&lt;/p&gt;

&lt;div class=&quot;box alt&quot;&gt;
    &lt;div class=&quot;row 50% uniform&quot;&gt;
        &lt;div class=&quot;6u&quot;&gt;
            &lt;span class=&quot;image fit clean&quot;&gt;
                &lt;a href=&quot;https://www.flickr.com/photos/benandliz/18530081769/&quot;&gt;&lt;img src=&quot;https://files.benramsey.com/ws/blog/2015-06-11-php-at-20/php-birthday-cake-1-1.jpg&quot; /&gt;&lt;/a&gt;
            &lt;/span&gt;
        &lt;/div&gt;
        &lt;div class=&quot;6u&quot;&gt;
            &lt;span class=&quot;image fit clean&quot;&gt;
                &lt;a href=&quot;https://www.flickr.com/photos/benandliz/18096515133/&quot;&gt;&lt;img src=&quot;https://files.benramsey.com/ws/blog/2015-06-11-php-at-20/php-birthday-cake-2.jpg&quot; /&gt;&lt;/a&gt;
            &lt;/span&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&quot;the-community-reflects&quot;&gt;The Community Reflects&lt;/h3&gt;

&lt;p&gt;On Monday, I called for PHP developers to &lt;a href=&quot;https://benramsey.com/blog/2015/06/20-years-of-php/&quot;&gt;reflect on their first experiences discovering PHP and the PHP community&lt;/a&gt; and tag it with &lt;code&gt;#20yearsofphp&lt;/code&gt;. Many responded, and I’ve enjoyed reading everyone’s posts. Thank you to everyone who posted.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.phpdeveloper.org/&quot;&gt;Chris Cornutt&lt;/a&gt; has already captured most of these posts on &lt;a href=&quot;http://www.phpdeveloper.org/news/22797&quot;&gt;PHPDeveloper.org’s list of 20 Years of PHP posts&lt;/a&gt;. I’m maintaining my own list here as a way for me to keep track of them. If I’m missing a link to your post, let me know.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://thephp.cc/news/2015/06/20-years-of-php-ab&quot; data-versionurl=&quot;https://web.archive.org/web/20150615131926/https://thephp.cc/news/2015/06/20-years-of-php-ab&quot; data-versiondate=&quot;2015-06-15&quot;&gt;Arne Blankerts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blogs.aws.amazon.com/php/post/Tx21S0POQBSHFAG/HaPHPy-20th-Birthday-to-PHP&quot; data-versionurl=&quot;http://web.archive.org/web/20150609180129/http://blogs.aws.amazon.com/php/post/Tx21S0POQBSHFAG/HaPHPy-20th-Birthday-to-PHP&quot; data-versiondate=&quot;2015-06-09&quot;&gt;AWS SDK Team&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://amandafolson.net/blog/2015/06/08/twenty-years-of-php/&quot; data-versionurl=&quot;https://archive.is/dyXKz&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Amanda Folson&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://duodra.co/2015/06/08/minha-historia-com-php/&quot; hreflang=&quot;pt-BR&quot; data-versionurl=&quot;http://web.archive.org/web/20150609180813/http://duodra.co/2015/06/08/minha-historia-com-php/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Anderson Casimiro&lt;/a&gt; (&lt;a href=&quot;http://duodra.co/2015/06/08/my-story-with-php/&quot; hreflang=&quot;en&quot; data-versionurl=&quot;http://web.archive.org/web/20150609180857/http://duodra.co/2015/06/08/my-story-with-php/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;English&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://benramsey.com/blog/2015/06/20-years-of-php/&quot; data-versionurl=&quot;https://web.archive.org/web/20150609181141/http://benramsey.com/blog/2015/06/20-years-of-php/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Ben Ramsey&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.calevans.com/2015/06/08/celebrating-20-years-of-php/&quot; data-versionurl=&quot;https://web.archive.org/web/20150609181218/http://blog.calevans.com/2015/06/08/celebrating-20-years-of-php/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Cal Evans&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.wyrihaximus.net/2015/06/20-years-of-php/&quot; data-versionurl=&quot;https://web.archive.org/web/20150609181250/http://blog.wyrihaximus.net/2015/06/20-years-of-php/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Cess-Jan Kiewiet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://littlehart.net/atthekeyboard/2015/06/08/php-created-this-monster/&quot; data-versionurl=&quot;https://web.archive.org/web/20150609181321/http://littlehart.net/atthekeyboard/2015/06/08/php-created-this-monster/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Chris Hartjes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ctankersley.com/2015/06/08/20-years-of-php/&quot; data-versionurl=&quot;https://web.archive.org/web/20150609181349/http://ctankersley.com/2015/06/08/20-years-of-php/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Chris Tankersley&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.hauser-wenz.de/s9y/index.php?/archives/294-20-Years-of-PHP!.html&quot; data-versionurl=&quot;https://web.archive.org/web/20150609181454/http://www.hauser-wenz.de/s9y/index.php?/archives/294-20-Years-of-PHP!.html&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Christian Wenz&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://daveyshafik.com/archives/69164-celebrating-20-years-of-php.html&quot; data-versionurl=&quot;https://web.archive.org/web/20150609181543/http://daveyshafik.com/archives/69164-celebrating-20-years-of-php.html&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Davey Shafik&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://daveismyname.com/my-php-story-20-years-of-php-bp&quot; data-versionurl=&quot;https://web.archive.org/web/20150609181622/https://daveismyname.com/my-php-story-20-years-of-php-bp&quot; data-versiondate=&quot;2015-06-09&quot;&gt;David Carr&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://pennedav.net/blog/article/8/&quot; data-versionurl=&quot;https://web.archive.org/web/20150609181731/http://pennedav.net/blog/article/8/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;David M. Penner&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://davidstockton.com/php/happy-20th-birthday-php&quot; data-versionurl=&quot;https://web.archive.org/web/20150609181807/http://davidstockton.com/php/happy-20th-birthday-php&quot; data-versiondate=&quot;2015-06-09&quot;&gt;David Stockton&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://derickrethans.nl/20years-php.html&quot; data-versionurl=&quot;https://web.archive.org/web/20150612034958/http://derickrethans.nl/20years-php.html&quot; data-versiondate=&quot;2015-06-11&quot;&gt;Derick Rethans&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://bussola.code-squad.com/2015/06/10/20-anos-de-php-evoluir-e-sexy/&quot; data-versionurl=&quot;https://web.archive.org/web/20150610183954/http://bussola.code-squad.com/2015/06/10/20-anos-de-php-evoluir-e-sexy/&quot; date-versiondate=&quot;2015-06-10&quot;&gt;Er Galvao Abbott&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://laravel-news.com/2015/06/20-years-of-php/&quot; data-versionurl=&quot;https://web.archive.org/web/20150612012746/https://laravel-news.com/2015/06/20-years-of-php/&quot; data-versiondate=&quot;2015-06-11&quot;&gt;Eric L. Barnes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.erikaheidi.com/blog/celebrating-php-twenty-years&quot; data-versionurl=&quot;https://web.archive.org/web/20150609181836/http://www.erikaheidi.com/blog/celebrating-php-twenty-years&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Erika Heidi&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://harikt.com/blog/2015/06/17/20-years-of-php/&quot; data-versionurl=&quot;https://web.archive.org/web/20150617183037/http://harikt.com/blog/2015/06/17/20-years-of-php/&quot; data-versiondate=&quot;2015-06-17&quot;&gt;Hari KT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ilia.ws/archives/290-Happy-belated-20th-PHP!.html&quot; data-versionurl=&quot;https://web.archive.org/web/20150613001430/http://ilia.ws/archives/290-Happy-belated-20th-PHP!.html&quot; data-versiondate=&quot;2015-06-12&quot;&gt;Ilia Alshanetsky&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.in2it.be/2015/06/20-years-of-php/&quot; data-versionurl=&quot;https://web.archive.org/web/20150610130648/https://www.in2it.be/2015/06/20-years-of-php/&quot; data-versiondate=&quot;2015-06-10&quot;&gt;in2it&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.jackbarber.co.uk/blog/my-20yearsofphp-story&quot; data-versionurl=&quot;https://web.archive.org/web/20150610131051/http://www.jackbarber.co.uk/blog/my-20yearsofphp-story&quot; data-versiondate=&quot;2015-06-10&quot;&gt;Jack Barber&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.krakjoe.ninja/2015/06/20-years-of-php.html&quot; data-versionurl=&quot;https://web.archive.org/web/20150609181921/http://blog.krakjoe.ninja/2015/06/20-years-of-php.html&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Joe Watkins&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://bafford.com/2015/06/08/20-years-of-php/&quot; data-versionurl=&quot;https://web.archive.org/web/20150609182000/http://bafford.com/2015/06/08/20-years-of-php/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;John Bafford&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://jonathas.com/20-years-of-php-and-me/&quot; data-versionurl=&quot;https://web.archive.org/web/20150615133635/http://jonathas.com/20-years-of-php-and-me/&quot; data-versiondate=&quot;2015-06-15&quot;&gt;Jon Ribeiro&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://seld.be/notes/20-years-and-9-days-of-php&quot; data-versionurl=&quot;https://web.archive.org/web/20150617153557/http://seld.be/notes/20-years-and-9-days-of-php&quot; data-versiondate=&quot;2015-06-17&quot;&gt;Jordi Boggiano&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.justincarmony.com/blog/2015/06/08/happy-birthday-php/&quot; data-versionurl=&quot;https://web.archive.org/web/20150609182037/http://www.justincarmony.com/blog/2015/06/08/happy-birthday-php/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Justin Carmony&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://kerryowston.co.uk/how-i-got-started-in-php&quot; data-versionurl=&quot;https://web.archive.org/web/20150609182117/http://kerryowston.co.uk/how-i-got-started-in-php&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Kerry Owston&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://kirstiehaxby.com/development/20-years-of-php-echo-mystory&quot; data-versionurl=&quot;https://web.archive.org/web/20150619150420/http://kirstiehaxby.com/development/20-years-of-php-echo-mystory&quot; data-versiondate=&quot;2015-06-19&quot;&gt;Kirstie McMillan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.phpclasses.org/blog/post/293-20-Years-of-PHP-and-16-Years-of-PHP-Classes.html&quot; data-versionurl=&quot;https://web.archive.org/web/20150625152226/http://www.phpclasses.org/blog/post/293-20-Years-of-PHP-and-16-Years-of-PHP-Classes.html&quot; data-versiondate=&quot;2015-06-25&quot;&gt;Manuel Lemos&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://markrailton.com/blog/2015/06/08/20-years-of-php/&quot; data-versionurl=&quot;https://archive.is/uVWVO&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Mark Railton&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.praterraines.co.uk/news/2015/0000041/my-php-story&quot; data-versionurl=&quot;https://web.archive.org/web/20150609182548/http://www.praterraines.co.uk/news/2015/0000041/my-php-story&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Matt Raines&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.matthewsetter.com/happy-20th-birthday-php/&quot; data-versionurl=&quot;https://web.archive.org/web/20150609182632/http://www.matthewsetter.com/happy-20th-birthday-php/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Matthew Setter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mwop.net/blog/2015-06-08-php-is-20.html&quot; data-versionurl=&quot;https://web.archive.org/web/20150609182705/https://mwop.net/blog/2015-06-08-php-is-20.html&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Matthew Weier O’Phinney&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.dragonbe.com/2015/06/20-years-of-php.html&quot; data-versionurl=&quot;https://web.archive.org/web/20150609182735/http://www.dragonbe.com/2015/06/20-years-of-php.html&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Michelangelo van Dam&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://oscarm.org/2015/06/20-years-of-php/&quot; data-versionurl=&quot;https://web.archive.org/web/20150609183146/http://oscarm.org/2015/06/20-years-of-php/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Oscar Merida&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.pascal-martin.fr/post/php-a-20-ans.html&quot; hreflang=&quot;fr&quot; data-versionurl=&quot;https://web.archive.org/web/20150609183322/http://blog.pascal-martin.fr/post/php-a-20-ans.html&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Pascal Martin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.patrickstephan.me/post/20-years-with-PHP.html&quot; data-versionurl=&quot;https://web.archive.org/web/20150610134604/http://www.patrickstephan.me/post/20-years-with-PHP.html&quot; data-versiondate=&quot;2015-06-10&quot;&gt;Patrick Stephan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.pauloeduardo.com/2015/06/08/20-anos-de-php/&quot; hreflang=&quot;pt&quot; data-versionurl=&quot;https://web.archive.org/web/20150609183620/http://www.pauloeduardo.com/2015/06/08/20-anos-de-php/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Paulo Eduardo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://monoforms.com/content/twenty-years-php&quot; hreflang=&quot;es&quot; data-versionurl=&quot;https://web.archive.org/web/20150609183802/http://monoforms.com/content/twenty-years-php&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Peter Activar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.doh.ms/2015/06/08/20-years-of-php-and-how-i-got-on-this-train/&quot; data-versionurl=&quot;https://web.archive.org/web/20150609184344/http://blog.doh.ms/2015/06/08/20-years-of-php-and-how-i-got-on-this-train/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Rafael Dohms&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://akrabat.com/20-years-of-php/&quot; data-versionurl=&quot;https://web.archive.org/web/20150609184450/http://akrabat.com/20-years-of-php/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Rob Allen&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://thephp.cc/news/2015/06/20-years-of-php-sb&quot; data-versionurl=&quot;https://web.archive.org/web/20150611130755/https://thephp.cc/news/2015/06/20-years-of-php-sb&quot; data-versiondate=&quot;2015-06-11&quot;&gt;Sebastian Bergmann&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.shameerc.com/2015/06/haphpy-20th-birthday-php&quot; data-versionurl=&quot;https://web.archive.org/web/20150609184527/http://blog.shameerc.com/2015/06/haphpy-20th-birthday-php&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Shameer C&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.sheriframadan.com/20-years-of-PHP.html&quot; data-versionurl=&quot;https://web.archive.org/web/20150610130410/http://blog.sheriframadan.com/20-years-of-PHP.html&quot; data-versiondate=&quot;2015-06-10&quot;&gt;Sherif Ramadan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://simonrjones.net/2015/06/php-and-me/&quot; data-versionurl=&quot;https://web.archive.org/web/20150609184554/http://simonrjones.net/2015/06/php-and-me/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Simon R. Jones&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://thephp.cc/news/2015/06/20-years-of-php-sp&quot; data-versionurl=&quot;https://web.archive.org/web/20150612142125/https://thephp.cc/news/2015/06/20-years-of-php-sp&quot; data-versiondate=&quot;2015-06-12&quot;&gt;Stefan Priebsch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.bitexpert.de/blog/20-years-of-php/&quot; data-versionurl=&quot;https://web.archive.org/web/20150609184652/https://blog.bitexpert.de/blog/20-years-of-php/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Stephan Hochdörfer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tudorbarbu.ninja/20-years-of-php/&quot; data-versionurl=&quot;https://web.archive.org/web/20150609184724/http://tudorbarbu.ninja/20-years-of-php/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Tudor Barbu&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.vectormediagroup.com/blog/view/celebrating-20-years-of-php&quot; data-versionurl=&quot;https://web.archive.org/web/20150611181457/http://www.vectormediagroup.com/blog/view/celebrating-20-years-of-php&quot; data-versiondate=&quot;2015-06-11&quot;&gt;Vector Media Group&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://wellingguzman.com/notes/twenty-years-of-php&quot; data-versionurl=&quot;https://web.archive.org/web/20150618134321/http://wellingguzman.com/notes/twenty-years-of-php&quot; data-versiondate=&quot;2015-06-18&quot;&gt;Welling Guzman&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://techblog.wimgodden.be/2015/06/08/a-happy-20-years/&quot; data-versionurl=&quot;https://web.archive.org/web/20150609185113/http://techblog.wimgodden.be/2015/06/08/a-happy-20-years/&quot; data-versiondate=&quot;2015-06-09&quot;&gt;Wim Godden&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;Reflecting on PHP at 20&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2015/06/php-at-20/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2015 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

        </entry>

        <entry>
            <title type="text">20 Years of PHP</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2015/06/20-years-of-php/"/>
            <published>2015-06-08T12:00:00+00:00</published>

                <updated>2015-06-15T13:20:00+00:00</updated>

            <id>http://benramsey.com/blog/2015/06/20-years-of-php</id>
            <rights type="text">
                Copyright © 2015 Ben Ramsey.
            </rights>

            <summary type="text">Twenty years ago today, Rasmus Lerdorf released Personal Home Page Tools (PHP Tools) version 1.0 to the world. I first encountered PHP in early 2000…</summary>
            <content type="html">
                &lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;https://files.benramsey.com/ws/blog/2015-06-08-20-years-of-php/banner-1500x630.jpg&quot;&gt;&lt;/p&gt;
                &lt;p&gt;Twenty years ago today, &lt;a href=&quot;https://groups.google.com/forum/#!msg/comp.infosystems.www.authoring.cgi/PyJ25gZ6z7A/M9FkTUVDfcwJ&quot;&gt;Rasmus Lerdorf released Personal Home Page Tools&lt;/a&gt; (PHP Tools) version 1.0 to the world.&lt;/p&gt;

&lt;aside class=&quot;info&quot;&gt;&lt;blockquote&gt;&lt;em&gt;&lt;h5&gt;Reflecting on PHP at 20&lt;/h5&gt;
&lt;p&gt;Please check out my newer post “&lt;a href=&quot;https://benramsey.com/blog/2015/06/php-at-20/&quot;&gt;Reflecting on PHP at 20&lt;/a&gt;,” where I discuss my InfoWorld article “&lt;a href=&quot;http://www.infoworld.com/article/2933858/php/php-at-20-from-pet-project-to-powerhouse.html&quot; data-versionurl=&quot;http://web.archive.org/web/20150611131243/http://www.infoworld.com/article/2933858/php/php-at-20-from-pet-project-to-powerhouse.html&quot; data-versiondate=&quot;2015-06-11&quot;&gt;PHP at 20: From pet project to powerhouse&lt;/a&gt;”, &lt;a href=&quot;http://devzone.zend.com/6178/20yearsofphp-a-timeline-of-tweets/&quot;&gt;@phpc’s timeline&lt;/a&gt;, the &lt;a href=&quot;https://twitter.com/hashtag/20yearsofphp&quot;&gt;#20yearsofphp&lt;/a&gt; hashtag, PHP cake, and community posts reflecting on 20 years of PHP.&lt;/p&gt;
&lt;/em&gt;&lt;/blockquote&gt;&lt;/aside&gt;

&lt;p&gt;I first encountered PHP in early 2000 when I was working for &lt;a href=&quot;https://twitter.com/brianrudolph&quot;&gt;Brian Rudolph&lt;/a&gt; at &lt;a href=&quot;http://web.archive.org/web/20040802224013/http://www.eureka-interactive.com/eugene.html&quot;&gt;EUREKA! Interactive&lt;/a&gt;. It was my first, big job in the industry, and it provided a solid foundation for the rest of my career.&lt;/p&gt;

&lt;p&gt;As I recall, I was making changes to a website, and I used an FTP program—probably &lt;a href=&quot;http://en.wikipedia.org/wiki/CuteFTP&quot;&gt;CuteFTP&lt;/a&gt;—to connect to the server to access the files. I remember seeing files in the directory with the extension &lt;code&gt;.php3&lt;/code&gt;. That didn’t strike me as odd, though. I had certainly seen these file extensions in URLs before, but my server-side programming experience up until this point had included only Perl and &lt;a href=&quot;http://en.wikipedia.org/wiki/Active_Server_Pages&quot;&gt;Classic ASP&lt;/a&gt;. I was able to open up the files, navigate around the PHP tags to make the necessary changes, and save the files back to the server—making updates directly to production, as one does.&lt;/p&gt;

&lt;p&gt;It wasn’t until 2002 that I began using PHP extensively—I wrote at length about that ten years ago for &lt;a href=&quot;https://benramsey.com/blog/2005/06/happy-birthday-php/&quot;&gt;PHP’s tenth birthday celebration&lt;/a&gt;—but this was my first encounter with it, and the thing that struck me was its ease-of-use. Now, fifteen years later, I look back on a career that has been made possible because of PHP.&lt;/p&gt;

&lt;p&gt;How did you first encounter PHP? For PHP’s twentieth birthday, I’d like to encourage you to post your own PHP story on your blog. Then, post it to Twitter using the hashtag &lt;code&gt;#20yearsofphp&lt;/code&gt;. Also, be sure to follow along as &lt;a href=&quot;https://twitter.com/phpc&quot;&gt;@phpc&lt;/a&gt; posts PHP community milestones throughout the day.&lt;/p&gt;

                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;20 Years of PHP&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2015/06/20-years-of-php/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2015 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

        </entry>

        <entry>
            <title type="text">Fun Recruiter Messages</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2015/05/fun-recruiter-messages/"/>
            <published>2015-05-28T22:00:00+00:00</published>

            <id>http://benramsey.com/blog/2015/05/fun-recruiter-messages</id>
            <rights type="text">
                Copyright © 2015 Ben Ramsey.
            </rights>

            <summary type="text">Earlier today in the #coderabbi Freenode IRC channel, we were discussing recruiter messages. I thought I’d share one of my favorite gems from over the years.</summary>
            <content type="html">

                &lt;p&gt;Earlier today in the &lt;code&gt;#coderabbi&lt;/code&gt; Freenode IRC channel, we were discussing recruiter messages. I thought I’d share one of my favorite gems from over the years.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Would you like to join one of the fastest growing start-ups in Rhode Island? Would you like to be apart [sic] company that makes dreams come true? If you are passionate about Ruby and Opensource technology development than [sic] this is the place for you. Wouldn’t it be nice to come home every day and know you are doing what you love in a company that loves your work? This is not just your average “job”. This is opportunity; this is a blur between dreams and reality; this is the opportunity that is going to slingshot you to happiness &amp;amp; career satisfaction.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Without shaming, ridiculing, or calling out any individuals, what’s your favorite recruiter message?&lt;/p&gt;

                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;Fun Recruiter Messages&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2015/05/fun-recruiter-messages/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2015 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

        </entry>

        <entry>
            <title type="text">Website Redesign</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2015/05/website-redesign/"/>
            <published>2015-05-26T13:00:00+00:00</published>

            <id>http://benramsey.com/blog/2015/05/website-redesign</id>
            <rights type="text">
                Copyright © 2015 Ben Ramsey.
            </rights>

            <summary type="text">I’ve fully redesigned my website and have added more content. In this post, I explain why and how.</summary>
            <content type="html">
                &lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;https://files.benramsey.com/ws/blog/2015-05-25-website-redesign/banner-1500x630.jpg&quot;&gt;&lt;/p&gt;
                &lt;p class=&quot;lead-in&quot;&gt;Welcome to my brand new website! I’ve worked hard to make this site, and I hope you like it.&lt;/p&gt;

&lt;p&gt;My blog has been around since 2004. My first blog post was written about the &lt;a href=&quot;https://benramsey.com/blog/2004/02/phpcommunityorg/&quot;&gt;PHP Community project&lt;/a&gt;. Back then, I used &lt;a href=&quot;http://en.wikipedia.org/wiki/Movable_Type&quot;&gt;Movable Type&lt;/a&gt; as my blogging engine. WordPress was still young, having only recently been forked from &lt;a href=&quot;http://cafelog.com/&quot;&gt;b2&lt;/a&gt;. A few months later, &lt;a href=&quot;https://benramsey.com/blog/2004/08/switching-to-wordpress/&quot;&gt;I did switch to WordPress&lt;/a&gt;, and then many years after that, I decided to use a static site generator, so &lt;a href=&quot;https://benramsey.com/blog/2012/02/revamping-my-development-toolchain/&quot;&gt;I switched to Octopress&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;why-redesign&quot;&gt;Why Redesign?&lt;/h3&gt;

&lt;p&gt;There were several things that prompted my desire to redesign this website:&lt;/p&gt;

&lt;p&gt;For one, I was inspired by the branding efforts of &lt;a href=&quot;http://wisdomworldtour.com/&quot;&gt;Yitzchok Willroth&lt;/a&gt;, &lt;a href=&quot;http://www.grumpy-learning.com/&quot;&gt;Chris Hartjes&lt;/a&gt;, and &lt;a href=&quot;http://shiflett.org/&quot;&gt;Chris Shiflett&lt;/a&gt;, and I wanted a personal web presence that would better communicate who I am and what I do.&lt;/p&gt;

&lt;p&gt;Second, I wanted a project that would take me back to my web development roots, and I felt that developing a personal website with all the bells and whistles would do just that. Through this process, I’ve been able to learn more about HTML5 and CSS3, as well as responsive website development.&lt;/p&gt;

&lt;p&gt;Last, I wanted to encourage and inspire others to follow suit. A decade ago, most web thought leadership conversations took place across blogs, and from blogs, leaders innovated and led the development of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Open_Web&quot;&gt;Open Web&lt;/a&gt;. However, since the advent of closed, microblogging platforms, many (myself included) have left their blogs behind in the dust, and I feel we’ve lost some of that innovation and openness. This redesign represents the beginning of my return to the ideals of the Open Web.&lt;/p&gt;

&lt;div class=&quot;embed rich Twitter&quot;&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Loving all the little touches in &lt;a href=&quot;https://twitter.com/ramsey?ref_src=twsrc%5Etfw&quot;&gt;@ramsey&lt;/a&gt;’s redesign. He even has a /purpose! :-) &lt;a href=&quot;http://t.co/RaPmYmhNZf&quot;&gt;http://t.co/RaPmYmhNZf&lt;/a&gt;&lt;/p&gt;&amp;mdash; Chris Shiflett (@shiflett) &lt;a href=&quot;https://twitter.com/shiflett/status/601779406978285568?ref_src=twsrc%5Etfw&quot;&gt;May 22, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h3 id=&quot;purpose&quot;&gt;/Purpose&lt;/h3&gt;

&lt;p&gt;Why do you do what you do? I am a web developer because I believe the web has the power to change the world. It is the biggest communications tool of our time, and it has the greatest power to effect change—if used appropriately. I have a passion for teaching web development because I want to encourage others to use these skills to change the world for good.&lt;/p&gt;

&lt;p&gt;I have been inspired by my friends at &lt;a href=&quot;http://fictivekin.com/&quot;&gt;Fictive Kin&lt;/a&gt; to create a &lt;a href=&quot;http://slashpurpose.org/&quot;&gt;/purpose&lt;/a&gt; (Slash Purpose) page, and I encourage you to think about why you do what you do and create your own /purpose page. Let it drive all that you do.&lt;/p&gt;

&lt;p&gt;Here is &lt;a href=&quot;https://benramsey.com/purpose/&quot;&gt;my /purpose page&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;indieweb-movement&quot;&gt;IndieWeb Movement&lt;/h3&gt;

&lt;p&gt;Through Chris Shiflett, I found out about the &lt;a href=&quot;https://indiewebcamp.com/&quot;&gt;Indie Web&lt;/a&gt; movement. Almost immediately, I felt a kinship with this community. I’ve already mentioned the Open Web philosophy. The Indie Web movement seems to be taking steps in this direction. I have followed their “&lt;a href=&quot;https://indiewebcamp.com/Get_Started&quot;&gt;Getting Started&lt;/a&gt;” guide to mark up my website with authorship information (h-card) and microformats mark-up for blog posts and articles (h-entry). This means my site content is easy to scrape, and it provides good identity information about myself that machines can read.&lt;/p&gt;

&lt;p&gt;Chris has &lt;a href=&quot;http://shiflett.org/blog/2015/may/indie-web-movement-and-indieauth&quot;&gt;written a little about some of the practical applications of IndieAuth&lt;/a&gt;. I’m sure he’ll write more, so I encourage you to follow along.&lt;/p&gt;

&lt;h3 id=&quot;focus-on-content&quot;&gt;Focus on Content&lt;/h3&gt;

&lt;p&gt;Previous versions of my website included only my blog and did not focus on my talks, articles, books, or projects. It is important to me to showcase this content, and so this new version of my site includes these and more. Just take a look under the &lt;em&gt;Features&lt;/em&gt; navigation link up top, or follow these links:&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;&lt;a href=&quot;https://benramsey.com/blog/&quot;&gt;Blog&lt;/a&gt;&lt;/dt&gt;
  &lt;dd&gt;I write about web development and related technologies in my blog. Usually, it has something to do with PHP. Occasionally, I’m off-topic.&lt;/dd&gt;
  &lt;dt&gt;&lt;a href=&quot;https://benramsey.com/articles/&quot;&gt;Articles&lt;/a&gt;&lt;/dt&gt;
  &lt;dd&gt;Here you can find my published articles with some useful and current discussion in the comments.&lt;/dd&gt;
  &lt;dt&gt;&lt;a href=&quot;https://benramsey.com/books/&quot;&gt;Books&lt;/a&gt;&lt;/dt&gt;
  &lt;dd&gt;Here you can find more information about books and publications I’ve written and contributed to.&lt;/dd&gt;
  &lt;dt&gt;&lt;a href=&quot;https://benramsey.com/talks/&quot;&gt;Talks&lt;/a&gt;&lt;/dt&gt;
  &lt;dd&gt;I speak about web development and related technologies at conferences around the world.&lt;/dd&gt;
  &lt;dt&gt;&lt;a href=&quot;https://benramsey.com/projects/&quot;&gt;Projects&lt;/a&gt;&lt;/dt&gt;
  &lt;dd&gt;I organize, maintain, develop, and participate in many open source projects and communities.&lt;/dd&gt;
  &lt;dt&gt;&lt;a href=&quot;https://benramsey.com/brews/&quot;&gt;Brews&lt;/a&gt;&lt;/dt&gt;
  &lt;dd&gt;I am an aficionado of beer and lover of coffee. Sometimes I write about them.&lt;/dd&gt;
&lt;/dl&gt;

&lt;h3 id=&quot;simple-and-elegant-design&quot;&gt;Simple and Elegant Design&lt;/h3&gt;

&lt;p&gt;I am a web developer, not a designer. I wanted something simple, elegant, and responsive that reflected my own personality, but I knew I would be unable to pull it off on my own.&lt;/p&gt;

&lt;p&gt;For design inspiration, I turned to &lt;a href=&quot;http://html5up.net/&quot;&gt;HTML5 UP&lt;/a&gt;. These are all clean and simple designs that are responsive, built with HTML5 and CSS3, and are licensed for free under a Creative Commons license. Through HTML5 UP, I learned about &lt;a href=&quot;http://twitter.com/n33co&quot;&gt;AJ’s&lt;/a&gt; other project, &lt;a href=&quot;http://pixelarity.com/&quot;&gt;Pixelarity&lt;/a&gt;. From there, I found the Catalyst theme, which is the theme on which I based this website.&lt;/p&gt;

&lt;p&gt;Thanks, AJ! I see you’re also in Nashville. Maybe I can buy you a drink sometime. :-)&lt;/p&gt;

&lt;h3 id=&quot;tools-used&quot;&gt;Tools Used&lt;/h3&gt;

&lt;p&gt;I again chose to use a static site generator for this website. I was pleased with how well Octopress worked, and I was interested in the forthcoming &lt;a href=&quot;https://github.com/octopress/octopress&quot;&gt;Octopress 3&lt;/a&gt;. Octopress 3 is still in the development stages, so I used &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; as the base, with a mixture of Jekyll and Octopress plugins, as well as some of my own.&lt;/p&gt;

&lt;p&gt;For the most part, I write all my posts and pages in Markdown, and I’ve been very happy with the &lt;a href=&quot;http://kramdown.gettalong.org/&quot;&gt;kramdown&lt;/a&gt; Markdown-superset converter. Additionally, I’m a big fan of &lt;a href=&quot;http://pygments.org/&quot;&gt;Pygments&lt;/a&gt; coupled with the &lt;a href=&quot;https://github.com/octopress/codefence&quot;&gt;Octopress Codefence&lt;/a&gt; plugin for marking up source code and providing syntax highlighting.&lt;/p&gt;

&lt;p&gt;Before you ask why I didn’t use &lt;a href=&quot;https://sculpin.io/&quot;&gt;Sculpin&lt;/a&gt;, let me take a moment to explain. Sculpin is a static site generator written in PHP. I love the project and the community around it. In fact, to show my support for it, I began this project by using Sculpin as its engine. However, after spending several months with it, I decided it wasn’t going to meet my needs or help me accomplish my goals; I was spending far too much time hacking the engine and writing Symfony bundles for functionality that didn’t yet exist in Sculpin.&lt;/p&gt;

&lt;p&gt;So, to &lt;a href=&quot;https://beau.io/&quot;&gt;Beau&lt;/a&gt; and the rest of the Sculpin contributors, I really do like what you’re doing and I encourage you to keep at it. I think it’s an exciting project, and in the future, I’d like to switch back to Sculpin. My wish list for Sculpin would include a focus on interop with Jekyll/Liquid and streamlined ability to create and install plugins.&lt;/p&gt;

&lt;h3 id=&quot;behind-the-scenes&quot;&gt;Behind the Scenes&lt;/h3&gt;

&lt;p&gt;I’ve already mentioned HTML5 and CSS3, and in putting together this website, I got to learn the JavaScript framework &lt;a href=&quot;http://getskel.com/&quot;&gt;Skel&lt;/a&gt; and I was able to play with the &lt;a href=&quot;http://sass-lang.com/&quot;&gt;Sass&lt;/a&gt; CSS extension language. Both are used heavily by HTML5 UP and Pixelarity themes. In fact, I found Skel much more flexible and useful for defining and managing responsive breakpoints than the popular &lt;a href=&quot;http://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt; framework.&lt;/p&gt;

&lt;p&gt;My website is hosted in &lt;a href=&quot;http://aws.amazon.com/s3/&quot;&gt;Amazon S3&lt;/a&gt;, with many static assets being served through &lt;a href=&quot;http://aws.amazon.com/cloudfront/&quot;&gt;Amazon CloudFront&lt;/a&gt;. I deploy to S3 using &lt;a href=&quot;http://s3tools.org/s3cmd&quot;&gt;s3cmd&lt;/a&gt;, and I manage redirects in S3 using &lt;a href=&quot;https://github.com/nathangrigg/s3redirect&quot;&gt;s3redirect&lt;/a&gt;. I’ve tried to ensure that all old URLs in my site, from 2004 to present day, redirect properly.&lt;/p&gt;

&lt;h3 id=&quot;benramseycom-through-the-years&quot;&gt;Benramsey.com Through the Years&lt;/h3&gt;

&lt;p&gt;Here are a few links to my website as it has appeared through the years:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://web.archive.org/web/20040311161922/http://benramsey.com/blog/&quot;&gt;First capture on the Wayback Machine&lt;/a&gt; (March 2004)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://web.archive.org/web/20050208154541/http://blog.benramsey.com/&quot;&gt;After switching to WordPress&lt;/a&gt; (February 2005)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://web.archive.org/web/20050406033626/http://benramsey.com/&quot;&gt;New design using a downloaded WordPress theme&lt;/a&gt; (April 2005)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://web.archive.org/web/20051211101820/http://benramsey.com/&quot;&gt;New design of my own imagining and handiwork&lt;/a&gt; (December 2005)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://web.archive.org/web/20101227032354/http://benramsey.com/&quot;&gt;Five years later, I was still using the same design&lt;/a&gt; (December 2010)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://web.archive.org/web/20120120034054/http://benramsey.com/&quot;&gt;Save the Internet blackout page&lt;/a&gt; (January 2012)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://web.archive.org/web/20120219220340/http://benramsey.com/&quot;&gt;First Wayback Machine capture after switching to Octopress&lt;/a&gt; (February 2012)&lt;/li&gt;
&lt;/ul&gt;

                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;Website Redesign&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2015/05/website-redesign/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2015 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

        </entry>

        <entry>
            <title type="text">My Failed Attempts at Soft Skills Talks</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2015/05/my-failed-attempts-at-soft-skills-talks/"/>
            <published>2015-05-23T20:30:00+00:00</published>

                <updated>2015-06-25T14:42:00+00:00</updated>

            <id>http://benramsey.com/blog/2015/05/my-failed-attempts-at-soft-skills-talks</id>
            <rights type="text">
                Copyright © 2015 Ben Ramsey.
            </rights>

            <summary type="text">In 2013, I began crafting soft skills talks as a return to the PHP conference speaker circuit, but I learned I wasn't suited to deliver these talks.</summary>
            <content type="html">
                &lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;https://files.benramsey.com/ws/blog/2015-05-23-my-failed-attempts-at-soft-skills-talks/banner-1500x630.jpg&quot;&gt;&lt;/p&gt;
                &lt;p&gt;During the &lt;a href=&quot;http://devhell.info/&quot;&gt;Development Hell&lt;/a&gt; podcast recording at &lt;a href=&quot;http://tek15.phparch.com/&quot;&gt;php[tek]&lt;/a&gt; (&lt;del&gt;not yet released at the time of this writing&lt;/del&gt;&lt;a href=&quot;http://devhell.info/post/2015-06-05/talmudic-maxims-for-the-unwashed-masses-phptek-2015/&quot;&gt;available here&lt;/a&gt;), Chris and Ed discussed &lt;em&gt;soft skills&lt;/em&gt; talks with Yitzchok Willroth (&lt;a href=&quot;https://twitter.com/coderabbi&quot;&gt;@coderabbi&lt;/a&gt;). &lt;a href=&quot;http://en.wikipedia.org/wiki/Soft_skills&quot;&gt;Soft skills&lt;/a&gt; are those skills that aren’t necessarily technical in nature—things like interpersonal communication, time management, managing teams, leadership, etc. They’re critical to our jobs, but we often see them as secondary to our technical skills. In fact, they are not soft at all—they’re rather difficult to master, which is why it’s important that we talk about them at conferences and write about them on our blogs and in our trade journals.&lt;/p&gt;

&lt;p&gt;At the podcast, I tried to elucidate a sentiment that’s been on my mind for some time, but it came out as rambling nonsense. I’m sorry. Here’s what I was trying to get at.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;pullquote-right &quot; data-pullquote=&quot;I assumed the next step for a seasoned speaker should be to start positioning myself for keynote opportunities.&quot;&gt;&lt;/span&gt;
I’ve been a conference speaker for many years. For a few recent years, I ramped down my speaking and took some time off from conferences to focus on my work, and as I started to ramp things back up, I tried to assess my options and how I wanted to position myself. I assumed the next step for a seasoned speaker should be to start positioning myself for keynote opportunities.&lt;/p&gt;

&lt;p&gt;I’ve always given very technical talks, and I’ve observed that keynotes are usually non-technical and focused on ideas, concepts, and soft skills, usually filled with personal anecdotes and inspirational stories. So, I set out to craft some talks that would help take me on a new direction in my speaking career.&lt;/p&gt;

&lt;p&gt;In 2013, I made my comeback appearance at CoderFaire Atlanta, where I was invited to give the conference keynote. This was supposed to be my shining moment as a keynote speaker to elaborate on the “&lt;a href=&quot;https://benramsey.com/articles/debugging-zen/&quot;&gt;Debugging Zen&lt;/a&gt;” article I had written for &lt;em&gt;Web Advent&lt;/em&gt;. The keynote was entitled “&lt;a href=&quot;https://benramsey.com/talks/2013/04/coderfaire-developing-intuition/&quot;&gt;Developing Intuition: How to Think Like a Software Architect&lt;/a&gt;.” I shifted the focus away from debugging and told my story of how I came to be a software developer and the heavy role intuition has played in my career. I think the talk resonated for about half of the audience. The other half probably thought it was a bunch of hokey gibberish.&lt;/p&gt;

&lt;p&gt;I spoke at php[tek] a little later that year, after having taken three years off from speaking there. I gave a presentation entitled “&lt;a href=&quot;https://benramsey.com/talks/2013/05/phptek-api-first/&quot;&gt;API First&lt;/a&gt;.” This was another soft talk (with a little bit of technical detail thrown in), building on my experiences developing and deploying APIs. In it, I talked about how to approach your managers and company leadership to convince them of taking an API-first approach to web application development. It was well-received and I saw a lot of great feedback, but it was not easy to prepare. &lt;a href=&quot;https://benramsey.com/talks/2013/10/zendcon-api-first/&quot;&gt;I gave it again at ZendCon&lt;/a&gt; later that year. Again, I received high marks and good feedback, but it felt lacking in a certain kind of energy and levity. After the intuition talk at CoderFaire, I realized that I’m not good at telling stories or relating anecdotes, and that was evident here, as well.&lt;/p&gt;

&lt;p&gt;That same year, &lt;a href=&quot;http://eliw.com/&quot;&gt;Eli&lt;/a&gt; asked me to put together the closing talk for php[architect]’s PHP 5.5 Web Summit. He wanted me to talk about &lt;a href=&quot;https://benramsey.com/talks/2013/09/phparch-modern-php/&quot;&gt;modern PHP development&lt;/a&gt;, so I decided to turn it into an observation of how best practices have arisen in the community over the years. I gave the talk many times over the following year, but it always had mixed reviews. On one side were the community &lt;em&gt;old-timers&lt;/em&gt; with whom the historical look-back resonated. On the other hand were folks newer to the community who criticized the talk as a bunch of nostalgic navel-gazing and were expecting a different kind of talk.&lt;/p&gt;

&lt;p&gt;I made one more attempt at a soft talk. Again, I refined my “Debugging Zen” article into &lt;a href=&quot;https://benramsey.com/talks/2014/09/madisonphp-debugging-zen/&quot;&gt;its own talk&lt;/a&gt;, discussing the role intuition plays for me in the art of debugging and how others can tap into their own intuition to be better software developers. At the Madison PHP Conference, where I first presented it, I gave it to a crowded room and received many encouraging comments. However, each time I’ve given the talk since, I’ve heard mixed feedback and even negative comments.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;pullquote-left &quot; data-pullquote=&quot;I’m a very introspective person, which I think works well in written form but falls flat for me in spoken form.&quot;&gt;&lt;/span&gt;
I’m a very introspective person, which I think works well in written form but falls flat for me in spoken form. So, I’ve decided to retire these talks. I still feel they are important, but I’m not the best person to deliver them.&lt;/p&gt;

&lt;p&gt;Now, back to the Development Hell podcast recording. Chris, Ed, and Yitz were discussing soft talks and it seemed to me the general sentiment was that all speakers should submit both soft skills and technical skills talks to tech conferences, and especially if you’re going to present a keynote, it needs to be heavily slanted to the soft side. Is this true?&lt;/p&gt;

&lt;p&gt;At php[tek] this past week, I introduced two brand-new technical talks. I had a blast preparing and delivering them, and I felt they were among the best talks I’ve given in the last three years, so maybe I’ve finally hit my stride and found myself again as a speaker, after attempting for so long to go in a direction that doesn’t suit me well. I’ll spend a few more years honing my abilities as a technical speaker, and in the future, maybe I’ll be ready to work hard on practicing and delivering another soft talk.&lt;/p&gt;

&lt;p&gt;Should every technical speaker have a soft talk included in their toolbox of talks? What about those who are much better at teaching technical skills than they are at motivating behavior? Is it possible to have a mostly technical keynote, or must keynotes always be soft? Observationally, it seems to me that PHP conferences used to be heavily technical and now they’re a mix of technical and life/professional skills talks. Is the mix just right, or is it skewed too much one way or the other?&lt;/p&gt;

                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;My Failed Attempts at Soft Skills Talks&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2015/05/my-failed-attempts-at-soft-skills-talks/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2015 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

        </entry>

        <entry>
            <title type="text">Learning A New Codebase</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2014/09/learning-a-new-codebase/"/>
            <published>2014-09-17T22:30:00+00:00</published>

            <id>http://benramsey.com/blog/2014/09/learning-a-new-codebase</id>
            <rights type="text">
                Copyright © 2014 Ben Ramsey.
            </rights>

            <summary type="text">What can developers do during the interview process to get an idea of the kind of codebase a company has? Here are a few tips I think go a long way in helping determine the state of a company's codebase.</summary>
            <content type="html">
                &lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;https://files.benramsey.com/ws/blog/2014-09-17-learning-a-new-codebase/banner-1500x630.jpg&quot;&gt;&lt;/p&gt;
                &lt;p&gt;A few days ago, my friend &lt;a href=&quot;http://funkatron.com/&quot;&gt;Ed Finkler&lt;/a&gt; started a &lt;a href=&quot;https://twitter.com/funkatron/status/507523737759932416&quot;&gt;new job&lt;/a&gt;. Earlier this week, he posted on Twitter:&lt;/p&gt;

&lt;div class=&quot;embed rich Twitter&quot;&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;First days humble us all.&lt;/p&gt;&amp;mdash; Ed Finkler (@funkatron) &lt;a href=&quot;https://twitter.com/funkatron/status/511689325398863872?ref_src=twsrc%5Etfw&quot;&gt;September 16, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;Having begun &lt;a href=&quot;http://benramsey.com/blog/2014/08/my-first-month-at-shootproof/&quot;&gt;a new job myself&lt;/a&gt;, I shared Ed’s sentiment. Last weekend, while at the &lt;a href=&quot;http://2014.madisonphpconference.com/&quot;&gt;Madison PHP Conference&lt;/a&gt;, we were discussing what developers can do during the interview process to get an idea of the kind of codebase a company has. After all, the developer is interviewing potential employers just as much as they are being interviewed as a potential employee. It would suck to be hired only to find the code is in shambles. Short of signing an NDA and asking to see the their code, what can you do?&lt;/p&gt;

&lt;p&gt;Here are a few tips I think go a long way in helping determine the state of a company’s codebase. If you have other ideas, feel free to leave them in the comments.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;Ask what coding standards the company follows.&lt;/em&gt; Can they articulate those standards well? Grill them on specifics. Be sure to ask this of the developers and not the managers. Otherwise, you might not get a good picture of how standards factor into their practices.&lt;/p&gt;

    &lt;p&gt;For PHP projects, you should hear something about &lt;a href=&quot;http://www.php-fig.org/psr/psr-2/&quot;&gt;PSR-2&lt;/a&gt; and &lt;a href=&quot;http://www.php-fig.org/psr/psr-1/&quot;&gt;PSR-1&lt;/a&gt;. If not, then at least the old &lt;a href=&quot;http://pear.php.net/manual/en/standards.php&quot;&gt;PEAR coding standards&lt;/a&gt; should come up.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;Ask whether the company uses a dependency/package management tool.&lt;/em&gt; Answers to this question are a good indication of whether the company subscribes to a &lt;a href=&quot;http://en.wikipedia.org/wiki/Not_invented_here&quot;&gt;not invented here (NIH)&lt;/a&gt; philosophy. Companies that reuse code from a variety of third-party packages tend to—in my experience—have better structured and cleaner codebases. I’m not sure why this is, but I suspect it’s because the developers have more exposure to how others are doing things and pick up on best practices in this way.&lt;/p&gt;

    &lt;p&gt;For PHP projects, you should hear the company talk about their use of &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;. At the very least, they should mention &lt;a href=&quot;http://pear.php.net/&quot;&gt;PEAR&lt;/a&gt;, but &lt;a href=&quot;http://benramsey.com/blog/2013/11/the-fall-of-pear-and-the-rise-of-composer/&quot;&gt;PEAR is waning&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;Ask how much of the code is covered by tests.&lt;/em&gt; There are unit tests, functional tests, integration tests, and acceptance tests. Maybe there are others that I’m not aware of. Start a conversation about which testing strategies the company uses and how many tests they have.&lt;/p&gt;

    &lt;p&gt;For PHP and web projects, there are many different testing tools available. At the least, I would expect to hear a company talk about &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt;, but even if they don’t, there are plenty of other unit testing frameworks for PHP, so they may have chosen to use something else. If so, ask why. Questioning a company’s decisions isn’t important, but I think it is enlightening to understand what factors go into their decisions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;Ask to have the company’s deployment process described.&lt;/em&gt; As a developer, will you deploy code, or is that handled by different people/teams? Will you be able to push code on your first day or in your first week? The timing isn’t as important as the processes around deploying, though. Try to get a sense for whether it’s a clean and straightforward process versus a haphazard and error-prone catastrophe.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As a follow-up, after you join a company, you are now faced with the daunting task of learning a new codebase. This morning, Ed asked in the #phpmentoring IRC channel on Freenode:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;funkatron&amp;gt; &lt;/span&gt;How do you deal with coming in to a huge code base you&amp;#39;re not familiar with?&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Here are the two tips I offered from my experiences:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;em&gt;Go through existing bug reports, fixing bugs.&lt;/em&gt; This helps you learn the code base, while feeling productive.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Write tests.&lt;/em&gt; If they don’t have tests, start a test project and start writing them. Aim for some low percentage of code coverage (i.e. 5-10%) at first. It’ll help you learn the code base quickly.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What are your tips for questions to ask potential employers and learning a new codebase once you’ve begun a new job?&lt;/p&gt;

                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;Learning A New Codebase&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2014/09/learning-a-new-codebase/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2014 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

        </entry>

        <entry>
            <title type="text">Setting Up Jenkins on Amazon Linux for PHP Testing</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2014/08/setting-up-jenkins-on-amazon-linux-for-php-testing/"/>
            <published>2014-08-07T15:45:00+00:00</published>

            <id>http://benramsey.com/blog/2014/08/setting-up-jenkins-on-amazon-linux-for-php-testing</id>
            <rights type="text">
                Copyright © 2014 Ben Ramsey.
            </rights>

            <summary type="text">One of my first tasks at ShootProof was to set up a Jenkins server for continuous integration and get it ready to run unit tests for PHP and JavaScript code. There are plenty of tutorials around the web to help you do just that. This is yet another one, but it's primarily my cleaned-up notes—and ...</summary>
            <content type="html">
                &lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;https://files.benramsey.com/ws/blog/2014-08-07-setting-up-jenkins-on-amazon-linux-for-php-testing/banner-1500x630.jpg&quot;&gt;&lt;/p&gt;
                &lt;p&gt;One of my first tasks at &lt;a href=&quot;https://www.shootproof.com/&quot;&gt;ShootProof&lt;/a&gt; was to set up a &lt;a href=&quot;http://jenkins-ci.org/&quot;&gt;Jenkins&lt;/a&gt; server for continuous integration and get it ready to run unit tests for PHP and JavaScript code. There are plenty of tutorials around the web to help you do just that. This is yet another one, but it’s primarily my cleaned-up notes—and less of a tutorial—placed here for my future self to find and provided publicly for all to benefit.&lt;/p&gt;

&lt;p&gt;These instructions are specifically tailored for setting up Jenkins on an &lt;a href=&quot;http://aws.amazon.com/amazon-linux-ami/&quot;&gt;Amazon Linux EC2 instance&lt;/a&gt;. If that’s not what you’re running, your mileage may vary. These commands should run on RHEL-based systems, and with modifications to the package manager and names of packages, they should work on other Unix-like systems.&lt;/p&gt;

&lt;h3 id=&quot;launch-and-prepare-an-ec2-instance&quot;&gt;1. Launch and Prepare an EC2 Instance&lt;/h3&gt;

&lt;p&gt;The Amazon Linux AMI I used was the latest (at the time) paravirtual, 64-bit, instance store AMI (&lt;a href=&quot;https://console.aws.amazon.com/ec2/v2/home?region=us-east-1#LaunchInstanceWizard:ami=ami-ed8e9284&quot;&gt;ami-ed8e9284&lt;/a&gt;), but &lt;a href=&quot;http://aws.amazon.com/amazon-linux-ami/#Amazon_Linux_AMI_IDs&quot;&gt;choosing the latest for your region&lt;/a&gt; should work just fine. You can use an EBS-backed volume instead and &lt;a href=&quot;https://github.com/alestic/ec2-consistent-snapshot&quot;&gt;set up regular snapshots&lt;/a&gt; of it, or you can follow these directions, &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-instance-store.html&quot;&gt;create an AMI&lt;/a&gt; from your configured instance, and set up regular snapshots of the EBS volume we attach to the instance. Either way will work fine. I just happened to use an instance store with an EBS volume attached.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Launch an EC2 instance (use &lt;a href=&quot;https://console.aws.amazon.com/ec2/v2/home?region=us-east-1#LaunchInstanceWizard:ami=ami-ed8e9284&quot;&gt;this link&lt;/a&gt; to launch one, if you like)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html&quot;&gt;Create an EBS volume&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html&quot;&gt;Attach the EBS volume&lt;/a&gt; to the instance you launched&lt;/li&gt;
  &lt;li&gt;SSH to the instance, format and mount the EBS volume (see below)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I’m using &lt;a href=&quot;http://en.wikipedia.org/wiki/XFS&quot;&gt;XFS&lt;/a&gt; for the EBS volume’s file system, but you may use what you prefer. We’ll mount the volume at &lt;code&gt;/var/lib/jenkins&lt;/code&gt;, so that we don’t have to do any complex trickery with the default jenkins user, home, and permissions. The EBS volume may exist at &lt;code&gt;/dev/xvdf&lt;/code&gt;, as it does in the following example, or it may be attached at another point. See also Amazon’s guide to “&lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html&quot;&gt;Making an Amazon EBS Volume Available for Use&lt;/a&gt;.”&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; All of these instructions require root access. You may prefix them with &lt;code&gt;sudo&lt;/code&gt;, or you may change to the root user.&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; yum install xfsprogs
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; mkfs -t xfs /dev/xvdf
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; mkdir -p /var/lib/jenkins
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; mount /dev/xvdf /var/lib/jenkins&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Now, the volume is mounted at &lt;code&gt;/var/lib/jenkins&lt;/code&gt;. We want to ensure it always gets mounted there when we restart the instance, so let’s add a line to &lt;code&gt;/etc/fstab&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; cp /etc/fstab /etc/fstab.orig
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; sh -c &lt;span class=&quot;s1&quot;&gt;&amp;#39;echo &amp;quot;/dev/xvdf  /var/lib/jenkins  xfs  defaults,nofail  0  2&amp;quot; &amp;gt;&amp;gt; /etc/fstab&amp;#39;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; mount -a&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;h3 id=&quot;install-and-start-jenkins&quot;&gt;2. Install and Start Jenkins&lt;/h3&gt;

&lt;p&gt;Installing and starting Jenkins is fairly simple. We need to add the official Jenkins project repository to the list of yum repos, and then we install with yum, start the service, and ensure that Jenkins starts up on a reboot.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; rpm --import http://pkg.jenkins-ci.org/redhat-stable/jenkins-ci.org.key
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; yum update
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; yum install jenkins
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; service jenkins start
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; chkconfig jenkins on&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;h3 id=&quot;configure-the-server-for-running-tests&quot;&gt;3. Configure the Server for Running Tests&lt;/h3&gt;

&lt;p&gt;Now, we need to install some stuff on the system so that Jenkins can do its thing. These instructions are intended for tests that use the &lt;a href=&quot;http://jenkins-php.org&quot;&gt;Template for Jenkins Jobs for PHP Projects&lt;/a&gt;. This will give you a basic PHP installation with all the tools necessary to run the template. If you need to use anything that deviates from the stock template, then you’ll need to make changes.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; yum install ant git graphviz gcc gcc-c++
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; yum install php55 php55-devel php55-common php55-cli php55-intl php55-gd php55-pecl-imagick php55-mbstring php55-mcrypt php55-mysqlnd php55-pdo php55-pecl-xdebug
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; sh -c &lt;span class=&quot;s1&quot;&gt;&amp;#39;sed -i &amp;quot;s/^memory_limit =.*/memory_limit = 256M/&amp;quot; /etc/php.ini&amp;#39;&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; sh -c &lt;span class=&quot;s1&quot;&gt;&amp;#39;sed -i &amp;quot;s/^;date\.timezone =.*/date\.timezone = America\/New_York/&amp;quot; /etc/php.ini&amp;#39;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;h4 id=&quot;nodejs&quot;&gt;Node.js&lt;/h4&gt;

&lt;p&gt;Since I want to use &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; for various build tools and to run JavaScript tests, I installed Node.js from source (yum always seems to have an outdated package). If you don’t need Node.js, you may skip this.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; wget http://nodejs.org/dist/v0.10.30/node-v0.10.30.tar.gz
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; tar zxf node-v0.10.30.tar.gz &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;node-v0.10.30
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ./configure
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; make
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; make install
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ln -s /usr/local/bin/node /usr/bin/node
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;7&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ln -s /usr/local/bin/npm /usr/bin/npm&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;See those last two lines where I’m creating symlinks? This is because the jenkins user doesn’t have &lt;code&gt;/usr/local/bin&lt;/code&gt; in its &lt;code&gt;PATH&lt;/code&gt;. Rather than adjusting the user’s &lt;code&gt;PATH&lt;/code&gt;, I chose to create symbolic links in &lt;code&gt;/usr/bin&lt;/code&gt;, so that jenkins can find the &lt;code&gt;node&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt; programs.&lt;/p&gt;

&lt;h4 id=&quot;phantomjs-and-casperjs&quot;&gt;PhantomJS and CasperJS&lt;/h4&gt;

&lt;p&gt;Finally, I also want to install &lt;a href=&quot;http://phantomjs.org/&quot;&gt;PhantomJS&lt;/a&gt; and &lt;a href=&quot;http://casperjs.org/&quot;&gt;CasperJS&lt;/a&gt; to supplement and aid in my JavaScript testing. If you don’t need these, you may skip this.&lt;/p&gt;

&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; yum install fontconfig freetype libfreetype.so.6 libfontconfig.so.1 libstdc++.so.6
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-1.9.7-linux-x86_64.tar.bz2 --no-check-certificate
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; tar jxf phantomjs-1.9.7-linux-x86_64.tar.bz2
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; cp phantomjs-1.9.7-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; npm install -g casperjs
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ln -s /usr/local/bin/phantomjs /usr/bin/phantomjs
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;7&quot; class=&quot;code-highlight-row unnumbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ln -s /usr/local/bin/casperjs /usr/bin/casperjs&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Notice the symbolic links created in the last two lines again. This is for the same reason I mentioned earlier: to help the jenkins user find these programs in its &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;configure-jenkins&quot;&gt;4. Configure Jenkins&lt;/h3&gt;

&lt;p&gt;Now, we’ve got Jenkins running, and the server has been configured to run our tests. You can go to Jenkins in a web browser to do the rest. By default, Jenkins runs on port 8080, so you can go to http://ec2-x-x-x-x.compute-1.amazonaws.com:8080/ to set it up.&lt;/p&gt;

&lt;p&gt;The first thing you’ll want to do is enable security. I prefer to install the &lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/Github+OAuth+Plugin&quot;&gt;GitHub OAuth Plugin&lt;/a&gt; and use GitHub to authenticate with Jenkins. I would also recommend setting up a proxy to Jenkins through Apache or Nginx and installing an SSL certificate to encrypt your communications with Jenkins. You might also consider using AWS security groups to restrict access to Jenkins by IP addresses. All of these are outside the scope of this post.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://jenkins-php.org/installation.html&quot;&gt;Install the Jenkins plugins required by the Template for Jenkins Jobs for PHP Projects&lt;/a&gt;. You’ll also need to install the required PHP tools listed on that page, or you may choose to use &lt;a href=&quot;https://github.com/ramsey/jenkins-php&quot;&gt;my jenkins-php meta-package&lt;/a&gt; with Composer to install them for you when you run Jenkins builds. If you choose the latter, be sure to set up your Ant build.xml script to also run &lt;code&gt;composer install&lt;/code&gt; on each build during the “prepare” stage and point the executable for each tool to the &lt;code&gt;vendor/bin/&lt;/code&gt; directory (where Composer installs them).&lt;/li&gt;
  &lt;li&gt;Create the &lt;a href=&quot;http://jenkins-php.org/automation.html&quot;&gt;Ant build.xml&lt;/a&gt; script for your project.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://jenkins-php.org/integration.html&quot;&gt;Install the job template for PHP jobs&lt;/a&gt; and set up your first job using the template.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here are a few other plugins that might come in handy:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;GitHub Plugin:&lt;/strong&gt; this plugin allows you to configure a job to pull source from a GitHub project, and you can set up GitHub web hooks to trigger builds on each code push to the repo&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GitHub pull request builder plugin:&lt;/strong&gt; this plugin will allow you to trigger a build on a pull request&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;HipChat Plugin / IRC Plugin / Slack Notification Plugin:&lt;/strong&gt; these plugins allow you to configure a job to send messages to channels on your favorite team chat servers&lt;/li&gt;
&lt;/ul&gt;


                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;Setting Up Jenkins on Amazon Linux for PHP Testing&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2014/08/setting-up-jenkins-on-amazon-linux-for-php-testing/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2014 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

                <category term="jenkins" scheme="https://benramsey.com/ns/category"/>

                <category term="aws" scheme="https://benramsey.com/ns/category"/>

                <category term="ci" scheme="https://benramsey.com/ns/category"/>

                <category term="unit tests" scheme="https://benramsey.com/ns/category"/>

        </entry>

        <entry>
            <title type="text">My First Month at ShootProof</title>
            <link rel="alternate" type="text/html" href="https://benramsey.com/blog/2014/08/my-first-month-at-shootproof/"/>
            <published>2014-08-04T03:00:00+00:00</published>

            <id>http://benramsey.com/blog/2014/08/my-first-month-at-shootproof</id>
            <rights type="text">
                Copyright © 2014 Ben Ramsey.
            </rights>

            <summary type="text">My first day at ShootProof was July 1st, and as I've come to my one-month anniversary with the company, I wanted to share some of the reasons that attracted me to ShootProof and why I'm still excited about it, after a month of working here.</summary>
            <content type="html">
                &lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;https://files.benramsey.com/ws/blog/2014-08-01-my-first-month-at-shootproof/banner-1500x630.jpg&quot;&gt;&lt;/p&gt;
                &lt;p&gt;It’s difficult to write a blog post about a new gig without coming across as sounding critical of past employers. That’s not my intent, but this first month I’ve spent at &lt;a href=&quot;https://www.shootproof.com/&quot;&gt;ShootProof&lt;/a&gt; has been one of the best months I’ve had in a long time, career-wise.&lt;/p&gt;

&lt;p&gt;My first day at ShootProof was July 1st, and as I’ve come to my one-month anniversary with the company, I wanted to share some of the reasons that attracted me to ShootProof and why I’m still excited about it, after a month of working here.&lt;/p&gt;

&lt;h3 id=&quot;the-team&quot;&gt;The Team&lt;/h3&gt;

&lt;p&gt;The primary reason I joined ShootProof was for the team. I had worked with &lt;a href=&quot;http://www.robertswarthout.com/&quot;&gt;Robert Swarthout&lt;/a&gt; and &lt;a href=&quot;http://www.deshong.net/&quot;&gt;Brian DeShong&lt;/a&gt; previously at Schematic (now &lt;a href=&quot;http://www.possible.com/&quot;&gt;POSSIBLE&lt;/a&gt;). We worked well together then, and the opportunity to work with them again was almost too good to be true. On top of that, ShootProof hires the best. With folks like &lt;a href=&quot;http://www.beparticular.com/&quot;&gt;Jenn Downs&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/Artifacture&quot;&gt;Terry Allen&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/iambandy&quot;&gt;Kevin Bandy&lt;/a&gt;, &lt;a href=&quot;http://byjad.com/&quot;&gt;Josh Davies&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/neighbor&quot;&gt;Colin Breece&lt;/a&gt;, and the rest of the ShootProof team, ShootProof really is a dream team.&lt;/p&gt;

&lt;p&gt;At PHP Tek 2009, my friend &lt;a href=&quot;http://seancoates.com/&quot;&gt;Sean Coates&lt;/a&gt; gave me some awesome career advice. He said, “You need to work with people who know you.” At ShootProof, I am doing just that, and it’s a great working relationship.&lt;/p&gt;

&lt;h3 id=&quot;bootstrapped&quot;&gt;Bootstrapped&lt;/h3&gt;

&lt;p&gt;Another thing that attracted me to ShootProof is its funding. As of today, it’s 100% bootstrapped. Ideologically, I’m not one of those who say your company must be bootstrapped or VC funded. There are pros and cons to both types of funding. But having experienced VC funding, a bootstrapped company had a certain appeal to me: all the investors have “skin in the game” in both the monetary investment sense, as well as the &lt;em&gt;&lt;a href=&quot;http://www.implementingscrum.com/2006/09/11/the-classic-story-of-the-pig-and-chicken/&quot;&gt;agile “pig”&lt;/a&gt;&lt;/em&gt; sense.&lt;/p&gt;

&lt;p&gt;What this means for me is that I work on a daily basis with the primary decision makers in the company, and these decision makers answer only to themselves (and our customers). There’s a great deal of freedom and trust in this relationship.&lt;/p&gt;

&lt;p&gt;Will we always remain bootstrapped? That’s not a question for me to answer or even to presume to know the answer. There are a variety of reasons we may or may not consider funding in the future, and that’s a question for our founders to tackle, but for now, the fact that we’re bootstrapped is important to me. It all comes back to the team. We’re intimate. We’re lean. We’re agile. We’re not tied down by VC money. We work only for our customers and ourselves.&lt;/p&gt;

&lt;h3 id=&quot;top-notch-support-team&quot;&gt;Top-notch Support Team&lt;/h3&gt;

&lt;p&gt;After meeting with Colin, I realized that ShootProof not only prides itself in building a great product, but our &lt;em&gt;special sauce&lt;/em&gt; is our customer support team. Our loyalty builders will do whatever it takes to ensure the happiness of our customers. I know this makes me sound rather dense and naïve, having worked in the industry for so many years, but after hearing about the work of our customer support team, I realized that customer support is just as much a part of our product as the code that makes up our web properties. I’m proud of the work they do, and I’m excited to be a part of their team.&lt;/p&gt;

&lt;h3 id=&quot;user-experience&quot;&gt;User Experience&lt;/h3&gt;

&lt;p&gt;Along with customer support, ShootProof is working to ensure we have the best possible user experience for our customers. That’s why we have ace UX folks on our team.&lt;/p&gt;

&lt;p&gt;User experience has always been an important cornerstone of software development to me. How users feel when they interact with your software interface determines whether they want to continue using it or not. Working at Schematic showed me how UX must be a discipline to any software company. I am more than thrilled that ShootProof feels the same way and has made it a crucial tenet of our process.&lt;/p&gt;

&lt;h3 id=&quot;product&quot;&gt;Product&lt;/h3&gt;

&lt;p&gt;As Brian said in his &lt;a href=&quot;http://www.deshong.net/blog/2014/7/joining-shootproof&quot;&gt;“Joining ShootProof” blog post&lt;/a&gt;, I also sought out ShootProof because I love to build products. I want to work for a company that is product-focused. Not only is ShootProof product-focused, they know their customer so well that they have been able to hone in on exactly what product to build for those customers. In fact, many of our team members are professional photographers themselves. That expertise and specificity is another reason I was attracted to ShootProof.&lt;/p&gt;

&lt;h3 id=&quot;revenue&quot;&gt;Revenue&lt;/h3&gt;

&lt;p&gt;ShootProof is a startup and a bootstrapped start-up at that. While I said earlier that the bootstrapped nature of the company attracted me, I would be lying if I said that revenue was not important. Many times, we hear “bootstrapped startup” and assume this means the company is not making any money. That is not the case with ShootProof. I can’t share numbers, but I can say that year-over-year growth has been sizable.&lt;/p&gt;

&lt;h3 id=&quot;culture&quot;&gt;Culture&lt;/h3&gt;

&lt;p&gt;I’m not interested in joining a fly-by-night startup whose desire is to jump into a market, disrupt it, and get out quickly, making tons of money. Those get-rich schemes rarely succeed and don’t appeal to me. Money is nice, but not at the expense of my family, health, and relationships. ShootProof is a company with focus, a clear direction, and respect for its team members.&lt;/p&gt;

&lt;p&gt;Recently, &lt;a href=&quot;http://blog.calevans.com/&quot;&gt;Cal Evans&lt;/a&gt; wrote a blog post entitled, “&lt;a href=&quot;http://blog.calevans.com/2014/07/30/its-all-about-culture/&quot;&gt;It’s All About Culture&lt;/a&gt;.” In it, he wrote:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The bedrock of a good developer culture is respect. Respect for the fact that
you have developers to build things on which the company is based. Respect
for the fact that without developers, the company most likely would not
exist. Culture is not putting developers on a pedestal and offering them
trinkets as tribute. Culture is understanding that developers aren’t cogs in
a machine that can be replaced on a whim.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Culture is one of those things that’s difficult to define and hard to articulate, but I think Cal hits the nail on the head here. A good culture focuses on the people who make up the team. ShootProof’s culture is one of respect for each other. The focus is on people. One of the things Robert said to me when we were first discussing the possibility of me joining ShootProof is that he wants to build a first-class team that makes others say to themselves, “That’s a great team! I want to work with that team, too.”&lt;/p&gt;

&lt;p&gt;The people and the focus on the people are what attracted me to ShootProof, and that’s why I’m still excited about ShootProof a month after joining them.&lt;/p&gt;


                &lt;p&gt;&lt;em&gt;&lt;a rel=&quot;author&quot; href=&quot;http://benramsey.com&quot;&gt;Ben Ramsey&lt;/a&gt; is a web developer, author, and speaker. He is a software architect at &lt;a href=&quot;https://www.shootproof.com&quot;&gt;ShootProof&lt;/a&gt;, where he builds a platform for professional photographers. He enjoys organizing user groups and contributing to open source software. Ben blogs at &lt;a href=&quot;http://benramsey.com&quot;&gt;benramsey.com&lt;/a&gt; and is &lt;a href=&quot;https://twitter.com/ramsey&quot;&gt;@ramsey&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;

                &lt;p&gt;&lt;small&gt;&lt;em&gt;&amp;#8220;My First Month at ShootProof&amp;#8221; was originally published at &lt;a rel=&#39;bookmark&#39; href=&#39;https://benramsey.com/blog/2014/08/my-first-month-at-shootproof/&#39;&gt;benramsey.com&lt;/a&gt; and is Copyright &amp;#169; 2014 Ben Ramsey. It is licensed for use under a &lt;a rel=&#39;license&#39; type=&#39;text/html&#39; href=&#39;http://creativecommons.org/licenses/by-sa/4.0/&#39;&gt;Creative Commons Attribution-ShareAlike license&lt;/a&gt;.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
            </content>

        </entry>

</feed>
